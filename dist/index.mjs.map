{"version":3,"sources":["../src/index.tsx","../src/modules/react-maplibre/components/custom-layer.tsx","../src/utils/assert.ts","../src/utils/use-isomorphic-layout-effect.ts","../src/modules/react-maplibre/components/popup-animation.tsx","../src/modules/react-maplibre/lib/animated-popup.js","../src/utils/apply-react-style.ts","../src/utils/deep-equal.ts","../src/utils/compare-class-names.ts","../src/modules/react-maplibre/types/lib.ts","../src/modules/react-threebox/components/threebox-layer.tsx","../src/modules/react-threebox/components/threebox.tsx","../src/modules/react-threebox/threebox/create-ref.ts","../src/modules/react-threebox/components/use-threebox.tsx","../src/modules/react-threebox/types/lib.ts","../src/modules/react-threebox/threebox/threebox-plugin.ts","../src/modules/react-threebox/components/model-loader.tsx","../src/modules/react-threebox/components/model-renderer.tsx","../src/utils/update-properties.ts","../src/modules/react-threebox/components/model-batcher.tsx","../src/modules/react-threejs/components/effect-canvas.tsx","../src/modules/react-threejs/threejs/graphics/effect-manager.ts","../src/modules/react-threejs/threejs/graphics/canvas-container.ts","../src/modules/react-threejs/threejs/graphics/webgl-shader-manager.ts","../src/modules/react-threejs/threejs/graphics/canvas-manager.ts","../src/modules/react-threejs/lib/bloom-effect/CameraSync.ts","../src/modules/react-threejs/lib/bloom-effect/Utils.js","../src/modules/react-threejs/lib/bloom-effect/constants.ts","../src/modules/react-threejs/threejs/graphics/bloom-renderer.ts","../src/modules/react-threejs/lib/bloom-effect/postprocessing/UnrealBloomPass.js","../src/modules/react-threejs/threejs/objects/mix-pass/mix-pass-material.ts","../src/modules/react-threejs/threejs/shaders/shader-lib.ts","../src/modules/react-threejs/threejs/shaders/uniforms-lib.ts","../src/modules/react-threejs/threejs/shaders/shader-chunk/mix-pass.ts","../src/modules/react-threejs/threejs/shaders/shader-chunk/extrude-wall.ts","../src/modules/react-threejs/threejs/shaders/shader-chunk.ts","../src/modules/react-threejs/threejs/objects/mix-pass/mix-pass.ts","../src/modules/react-threejs/components/bloom-line.tsx","../src/modules/react-threejs/threejs/objects/bloom-line/bloom-line-geometry.ts","../src/modules/react-threejs/threejs/objects/bloom-line/bloom-line-material.ts","../src/modules/react-threejs/threejs/objects/bloom-line/bloom-line.ts","../src/modules/react-threejs/components/extrude-wall.tsx","../src/modules/react-threejs/threejs/objects/extrude-wall/extrude-wall-geometry.ts","../src/modules/react-threejs/threejs/objects/extrude-wall/extrude-wall-material.ts","../src/modules/react-threejs/threejs/objects/extrude-wall/extrude-wall.ts","../src/modules/react-threejs/types/common.ts"],"sourcesContent":["// React Map GL (Re-export)\r\nexport * from 'react-map-gl';\r\n\r\n// React Mapbox GL (Custom)\r\nexport * from './modules/react-maplibre';\r\n\r\n// React Threebox\r\nexport * from './modules/react-threebox';\r\n\r\n// React Three.js\r\nexport * from './modules/react-threejs';\r\n","import * as React from 'react';\r\nimport { useMap } from 'react-map-gl/maplibre';\r\nimport type { mat4 } from 'gl-matrix';\r\nimport type { CustomLayerOptions, CustomRenderOptions, MapboxInstance } from '../types/lib';\r\nimport assert from '../../../utils/assert';\r\nimport useIsomorphicLayoutEffect from '../../../utils/use-isomorphic-layout-effect';\r\n\r\nexport type CustomLayerProps = Omit<CustomLayerOptions, 'type' | 'renderingMode'> & {\r\n  beforeId?: string;\r\n  children?: React.ReactNode;\r\n  onMount?: () => void;\r\n  onUnmount?: () => void;\r\n};\r\n\r\nconst useLatestRef = <T,>(value: T) => {\r\n  const ref = React.useRef(value);\r\n  ref.current = value;\r\n  return ref;\r\n};\r\n\r\nconst updateCustomLayer = (\r\n  map: MapboxInstance,\r\n  id: string,\r\n  props: Partial<CustomLayerProps>,\r\n  prevProps: Partial<CustomLayerProps>,\r\n) => {\r\n  assert(props.id === prevProps.id, 'layer id changed');\r\n\r\n  if (props.beforeId !== prevProps.beforeId) {\r\n    map.moveLayer(id, props.beforeId);\r\n  }\r\n};\r\n\r\nconst createCustomLayer = (\r\n  map: MapboxInstance,\r\n  id: string,\r\n  props: Partial<CustomLayerProps>,\r\n  handlers: {\r\n    onAddRef: React.RefObject<CustomLayerProps['onAdd']>;\r\n    prerenderRef: React.RefObject<CustomLayerProps['prerender']>;\r\n    renderRef: React.RefObject<CustomLayerProps['render']>;\r\n    onRemoveRef: React.RefObject<CustomLayerProps['onRemove']>;\r\n  },\r\n) => {\r\n  const layer: CustomLayerOptions = {\r\n    id,\r\n    type: 'custom',\r\n    renderingMode: '3d',\r\n    onAdd: (m: MapboxInstance, gl: WebGLRenderingContext) => {\r\n      handlers.onAddRef.current?.(m, gl);\r\n    },\r\n    prerender: (gl: WebGLRenderingContext, matrix: mat4, options: CustomRenderOptions) => {\r\n      handlers.prerenderRef.current?.(gl, matrix, options);\r\n    },\r\n    render: (gl: WebGLRenderingContext, matrix: mat4, options: CustomRenderOptions) => {\r\n      handlers.renderRef.current?.(gl, matrix, options);\r\n    },\r\n    onRemove: (m: MapboxInstance, gl: WebGLRenderingContext) => {\r\n      handlers.onRemoveRef.current?.(m, gl);\r\n    },\r\n  };\r\n\r\n  // @ts-ignore\r\n  map.addLayer(layer, props.beforeId);\r\n};\r\n\r\nlet layerCounter = 0;\r\n\r\nexport const CustomLayer: React.FC<CustomLayerProps> = ({\r\n  onAdd,\r\n  prerender,\r\n  render,\r\n  onRemove,\r\n  onMount,\r\n  onUnmount,\r\n  children,\r\n  ...props\r\n}) => {\r\n  const map = useMap().current?.getMap();\r\n  const propsRef = React.useRef(props);\r\n  const [, setStyleLoaded] = React.useState(0);\r\n\r\n  const id = React.useMemo(() => props.id || `custom-layer-${layerCounter++}`, []);\r\n  const memorizedProps = React.useMemo(\r\n    () => ({\r\n      ...props,\r\n      type: 'custom' as const,\r\n      renderingMode: '3d' as const,\r\n    }),\r\n    [Object.values(props).join(',')],\r\n  );\r\n\r\n  const onAddRef = useLatestRef(onAdd);\r\n  const prerenderRef = useLatestRef(prerender);\r\n  const renderRef = useLatestRef(render);\r\n  const onRemoveRef = useLatestRef(onRemove);\r\n\r\n  React.useEffect(() => {\r\n    if (!map) return;\r\n    const forceUpdate = () => setStyleLoaded((v) => v + 1);\r\n    map.on('styledata', forceUpdate);\r\n    forceUpdate();\r\n    onMount?.();\r\n\r\n    return () => {\r\n      map.off('styledata', forceUpdate);\r\n      // @ts-ignore\r\n      if (map.style && map.style._loaded && map.getLayer(id)) {\r\n        map.removeLayer(id);\r\n        onUnmount?.();\r\n      }\r\n    };\r\n  }, [map, id, onMount, onUnmount]);\r\n\r\n  // @ts-ignore\r\n  useIsomorphicLayoutEffect(() => {\r\n    if (!map) return;\r\n    const layer = map.style && map.style._loaded && map.getLayer(id);\r\n\r\n    if (layer) {\r\n      updateCustomLayer(map, id, memorizedProps, propsRef.current);\r\n    } else {\r\n      createCustomLayer(map, id, memorizedProps, {\r\n        onAddRef,\r\n        prerenderRef,\r\n        renderRef,\r\n        onRemoveRef,\r\n      });\r\n    }\r\n    propsRef.current = memorizedProps;\r\n  }, [map, id, memorizedProps]);\r\n\r\n  return children;\r\n};\r\n","export default function assert(condition: any, message: string) {\r\n  if (!condition) {\r\n    throw new Error(message);\r\n  }\r\n}","// useLayoutEffect but does not trigger warning in server-side rendering\r\nimport { useEffect, useLayoutEffect } from 'react';\r\n\r\nconst useIsomorphicLayoutEffect = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\r\n\r\nexport default useIsomorphicLayoutEffect;\r\n","'use client';\n\nimport * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport { useMap } from 'react-map-gl/maplibre';\n\nimport AnimatedPopup from '../lib/animated-popup';\nimport type { PopupAnimationProps } from '../types/common';\nimport { applyReactStyle } from '../../../utils/apply-react-style';\nimport { deepEqual } from '../../../utils/deep-equal';\nimport { compareClassNames } from '../../../utils/compare-class-names';\n\nconst defaultOptions = {\n  maxWidth: '350px',\n  anchor: 'bottom',\n  closeButton: false,\n  closeOnClick: true,\n  closeOnMove: false,\n  focusAfterOpen: true,\n};\n\n/**\n * PopupAnimation: Animated Mapbox popup with React content and a11y.\n * @param props PopupProps\n * @param ref Forwarded ref to AnimatedPopup instance\n */\nconst _PopupAnimation = React.forwardRef<AnimatedPopup, PopupAnimationProps>((props, ref) => {\n  const map = useMap().current;\n  const { longitude, latitude, style, children, onOpen, onClose, ...popupOptions } = props;\n\n  const container = React.useMemo(() => document.createElement('div'), []);\n  const propsRef = React.useRef<PopupAnimationProps>(props);\n\n  const popup = React.useMemo(() => {\n    const pp = new AnimatedPopup({ ...defaultOptions, ...popupOptions });\n    pp.setLngLat([longitude, latitude]);\n    pp.once('open', (e: any) => {\n      propsRef.current.onOpen?.(e);\n    });\n    return pp;\n  }, []);\n\n  const handleClose = React.useCallback((e: any) => {\n    propsRef.current.onClose?.(e);\n  }, []);\n\n  React.useEffect(() => {\n    if (!map) {\n      return;\n    }\n    popup.on('close', handleClose);\n    popup.setDOMContent(container).addTo(map.getMap());\n    return () => {\n      popup.off('close', handleClose);\n      if (popup.isOpen()) {\n        popup.remove();\n        propsRef.current.onClose?.({ target: popup as any, type: 'close' });\n      }\n    };\n  }, [popup, map, container, handleClose]);\n\n  React.useEffect(() => {\n    applyReactStyle(popup.getElement()!, style || {});\n  }, [style, popup]);\n\n  React.useImperativeHandle(ref, () => popup, [popup]);\n\n  if (popup.isOpen()) {\n    const oldProps = propsRef.current;\n    if (popup.getLngLat().lng !== longitude || popup.getLngLat().lat !== latitude) {\n      popup.setLngLat([longitude, latitude]);\n    }\n    if (props.offset && !deepEqual(oldProps.offset, props.offset)) {\n      popup.options.anchor = props.anchor;\n      popup.setOffset(props.offset);\n    }\n    if (oldProps.anchor !== props.anchor || oldProps.maxWidth !== props.maxWidth) {\n      popup.setMaxWidth(props.maxWidth!);\n    }\n    const classNameDiff = compareClassNames(oldProps.className, props.className);\n    if (classNameDiff) {\n      for (const c of classNameDiff) {\n        popup.toggleClassName(c);\n      }\n    }\n    propsRef.current = props;\n  }\n\n  return createPortal(children, container);\n});\n\nexport const PopupAnimation = React.memo(_PopupAnimation);\n","import {Popup} from 'maplibre-gl';\n\nconst effects = {\n    linear(t) {\n        return t;\n    },\n\n    easeInQuad(t) {\n        return t * t;\n    },\n\n    easeOutQuad(t) {\n        return -t * (t - 2);\n    },\n\n    easeInOutQuad(t) {\n        if ((t /= 0.5) < 1) {\n            return 0.5 * t * t;\n        }\n        return -0.5 * ((--t) * (t - 2) - 1);\n    },\n\n    easeInCubic(t) {\n        return t * t * t;\n    },\n\n    easeOutCubic(t) {\n        return (t -= 1) * t * t + 1;\n    },\n\n    easeInOutCubic(t) {\n        if ((t /= 0.5) < 1) {\n            return 0.5 * t * t * t;\n        }\n        return 0.5 * ((t -= 2) * t * t + 2);\n    },\n\n    easeInQuart(t) {\n        return t * t * t * t;\n    },\n\n    easeOutQuart(t) {\n        return -((t -= 1) * t * t * t - 1);\n    },\n\n    easeInOutQuart(t) {\n        if ((t /= 0.5) < 1) {\n            return 0.5 * t * t * t * t;\n        }\n        return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n\n    easeInQuint(t) {\n        return t * t * t * t * t;\n    },\n\n    easeOutQuint(t) {\n        return (t -= 1) * t * t * t * t + 1;\n    },\n\n    easeInOutQuint(t) {\n        if ((t /= 0.5) < 1) {\n            return 0.5 * t * t * t * t * t;\n        }\n        return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n\n    easeInSine(t) {\n        return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n\n    easeOutSine(t) {\n        return Math.sin(t * (Math.PI / 2));\n    },\n\n    easeInOutSine(t) {\n        return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n\n    easeInExpo(t) {\n        return (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n\n    easeOutExpo(t) {\n        return (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n\n    easeInOutExpo(t) {\n        if (t === 0) {\n            return 0;\n        }\n        if (t === 1) {\n            return 1;\n        }\n        if ((t /= 0.5) < 1) {\n            return 0.5 * Math.pow(2, 10 * (t - 1));\n        }\n        return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n\n    easeInCirc(t) {\n        if (t >= 1) {\n            return t;\n        }\n        return -(Math.sqrt(1 - t * t) - 1);\n    },\n\n    easeOutCirc(t) {\n        return Math.sqrt(1 - (t -= 1) * t);\n    },\n\n    easeInOutCirc(t) {\n        if ((t /= 0.5) < 1) {\n            return -0.5 * (Math.sqrt(1 - t * t) - 1);\n        }\n        return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n\n    easeInElastic(t) {\n        let s = 1.70158;\n        let p = 0;\n        let a = 1;\n        if (t === 0) {\n            return 0;\n        }\n        if (t === 1) {\n            return 1;\n        }\n        if (!p) {\n            p = 0.3;\n        }\n        if (a < 1) {\n            a = 1;\n            s = p / 4;\n        } else {\n            s = p / (2 * Math.PI) * Math.asin(1 / a);\n        }\n        return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n\n    easeOutElastic(t) {\n        let s = 1.70158;\n        let p = 0;\n        let a = 1;\n        if (t === 0) {\n            return 0;\n        }\n        if (t === 1) {\n            return 1;\n        }\n        if (!p) {\n            p = 0.3;\n        }\n        if (a < 1) {\n            a = 1;\n            s = p / 4;\n        } else {\n            s = p / (2 * Math.PI) * Math.asin(1 / a);\n        }\n        return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n\n    easeInOutElastic(t) {\n        let s = 1.70158;\n        let p = 0;\n        let a = 1;\n        if (t === 0) {\n            return 0;\n        }\n        if ((t /= 0.5) === 2) {\n            return 1;\n        }\n        if (!p) {\n            p = 0.45;\n        }\n        if (a < 1) {\n            a = 1;\n            s = p / 4;\n        } else {\n            s = p / (2 * Math.PI) * Math.asin(1 / a);\n        }\n        if (t < 1) {\n            return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n        }\n        return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack(t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n\n    easeOutBack(t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n\n    easeInOutBack(t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n    },\n\n    easeInBounce(t) {\n        return 1 - effects.easeOutBounce(1 - t);\n    },\n\n    easeOutBounce(t) {\n        if (t < (1 / 2.75)) {\n            return 7.5625 * t * t;\n        }\n        if (t < (2 / 2.75)) {\n            return 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n        }\n        if (t < (2.5 / 2.75)) {\n            return 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n        }\n        return 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n    },\n\n    easeInOutBounce(t) {\n        if (t < 0.5) {\n            return effects.easeInBounce(t * 2) * 0.5;\n        }\n        return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n};\n\nconst transforms = {\n    scale: (style, value, reverse) => {\n        style.transform = `scale(${reverse ? 1 - value : value})`;\n    },\n    opacity: (style, value, reverse) => {\n        style.opacity = reverse ? 1 - value : value;\n    }\n};\n\nfunction animate(style, ease, duration, reverse, complete, transform) {\n    let cancel;\n    const applyTransform = typeof transform === 'string' ? (transforms[transform] || transforms.scale) : transform;\n    const start = performance.now();\n\n    const repeat = () => {\n        if (cancel) {\n            return;\n        }\n\n        const elapsed = performance.now() - start;\n        const t = duration === 0 ? 1 : Math.min(elapsed / duration, 1);\n        const value = effects[ease](t);\n\n        applyTransform(style, value, reverse);\n\n        if (t < 1) {\n            requestAnimationFrame(repeat);\n        } else if (complete) {\n            complete();\n        }\n    };\n\n    repeat();\n\n    // Returns the cancel function\n    return () => {\n        cancel = true;\n    };\n}\n\nfunction extend(dest, ...sources) {\n    for (const src of sources) {\n        for (const k in src) {\n            if (typeof src[k] === 'object') {\n                if (!dest[k]) {\n                    dest[k] = {};\n                }\n                extend(dest[k], src[k]);\n            } else {\n                dest[k] = src[k];\n            }\n        }\n    }\n    return dest;\n}\n\nconst defaultOptions = {\n    openingAnimation: {\n        transform: 'scale',\n        duration: 1000,\n        easing: 'easeOutElastic'\n    },\n    closingAnimation: {\n        transform: 'scale',\n        duration: 300,\n        easing: 'easeInBack'\n    },\n};\n\n/**\n * An animated popup component.\n *\n * @param {Object} [options]\n * @param {Object} [options.openingAnimation] - Options controlling the opening\n *   animation.\n * @param {Object} [options.openingAnimation.duration=1000] - The animation's duration,\n *   measured in milliseconds.\n * @param {Object} [options.openingAnimation.easing] - The easing function name of\n *   the animation. See https://easings.net\n * @param {Object} [options.closingAnimation='easeOutElastic'] - Options controlling\n *   the closing animation.\n * @param {Object} [options.closingAnimation.duration=300] - The animation's duration,\n *   measured in milliseconds.\n * @param {Object} [options.closingAnimation.easing='easeInBack'] - The easing function\n *   name of the animation. See https://easings.net\n */\nexport default class AnimatedPopup extends Popup {\n    constructor(options) {\n        super(options);\n        extend(this.options, extend({}, defaultOptions, options));\n        this._animated = false;\n        this._contentWrapper = null;\n    }\n\n    setDOMContent(htmlNode) {\n        const wrapper = document.createElement('div');\n        wrapper.className = 'popup-animated-content';\n        wrapper.appendChild(htmlNode);\n        this._contentWrapper = wrapper;\n        return super.setDOMContent(wrapper);\n    }\n\n    addTo(map) {\n        if (this._contentWrapper) {\n            this.remove();\n        }\n        this._runOpenAnimation();\n        setTimeout(() => {\n            super.addTo(map);\n        }, 0);\n        return this;\n    }\n\n    _runOpenAnimation() {\n        if (this._animated) return;\n        const wrapper = this._contentWrapper;\n        if (!wrapper) return;\n        const {easing, duration, transform} = this.options.openingAnimation;\n        this._cancelAnimation = animate(wrapper.style, easing, duration, false, null, transform);\n        this._animated = true;\n    }\n\n    remove() {\n        const wrapper = this._contentWrapper;\n        if (wrapper) {\n            const {easing, duration, transform} = this.options.closingAnimation;\n            if (this._cancelAnimation) this._cancelAnimation();\n            this._cancelAnimation = animate(wrapper.style, easing, duration, true, () => {\n                super.remove();\n                this._animated = false;\n            }, transform);\n        } else {\n            super.remove();\n            this._animated = false;\n        }\n        return this;\n    }\n}\n","import * as React from 'react';\r\n// This is a simplified version of\r\n// https://github.com/facebook/react/blob/4131af3e4bf52f3a003537ec95a1655147c81270/src/renderers/dom/shared/CSSPropertyOperations.js#L62\r\nconst unitlessNumber = /box|flex|grid|column|lineHeight|fontWeight|opacity|order|tabSize|zIndex/;\r\n\r\nexport function applyReactStyle(element: HTMLElement, styles: React.CSSProperties) {\r\n  if (!element || !styles) {\r\n    return;\r\n  }\r\n  const style = element.style;\r\n\r\n  for (const key in styles) {\r\n    const value = styles[key as keyof React.CSSProperties];\r\n    if (Number.isFinite(value) && !unitlessNumber.test(key)) {\r\n      (style as any)[key] = `${value}px`;\r\n    } else {\r\n      (style as any)[key] = value;\r\n    }\r\n  }\r\n}","import type {PointLike} from 'react-map-gl/maplibre';\r\n\r\n/**\r\n * Compare two points\r\n * @param a\r\n * @param b\r\n * @returns true if the points are equal\r\n */\r\nexport function arePointsEqual(a?: PointLike, b?: PointLike): boolean {\r\n  const ax = Array.isArray(a) ? a[0] : a ? a.x : 0;\r\n  const ay = Array.isArray(a) ? a[1] : a ? a.y : 0;\r\n  const bx = Array.isArray(b) ? b[0] : b ? b.x : 0;\r\n  const by = Array.isArray(b) ? b[1] : b ? b.y : 0;\r\n  return ax === bx && ay === by;\r\n}\r\n\r\n/* eslint-disable complexity */\r\n/**\r\n * Compare any two objects\r\n * @param a\r\n * @param b\r\n * @returns true if the objects are deep equal\r\n */\r\nexport function deepEqual(a: any, b: any): boolean {\r\n  if (a === b) {\r\n    return true;\r\n  }\r\n  if (!a || !b) {\r\n    return false;\r\n  }\r\n  if (Array.isArray(a)) {\r\n    if (!Array.isArray(b) || a.length !== b.length) {\r\n      return false;\r\n    }\r\n    for (let i = 0; i < a.length; i++) {\r\n      if (!deepEqual(a[i], b[i])) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  } else if (Array.isArray(b)) {\r\n    return false;\r\n  }\r\n  if (typeof a === 'object' && typeof b === 'object') {\r\n    const aKeys = Object.keys(a);\r\n    const bKeys = Object.keys(b);\r\n    if (aKeys.length !== bKeys.length) {\r\n      return false;\r\n    }\r\n    for (const key of aKeys) {\r\n      if (!b.hasOwnProperty(key)) {\r\n        return false;\r\n      }\r\n      if (!deepEqual(a[key], b[key])) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  return false;\r\n}","/** Compare two classNames string and return the difference */\r\nexport function compareClassNames(\r\n  prevClassName: string | undefined,\r\n  nextClassName: string | undefined\r\n): string[] | null {\r\n  if (prevClassName === nextClassName) {\r\n    return null;\r\n  }\r\n\r\n  const prevClassList = getClassList(prevClassName);\r\n  const nextClassList = getClassList(nextClassName);\r\n  const diff: string[] = [];\r\n\r\n  for (const c of nextClassList) {\r\n    if (!prevClassList.has(c)) {\r\n      diff.push(c);\r\n    }\r\n  }\r\n  for (const c of prevClassList) {\r\n    if (!nextClassList.has(c)) {\r\n      diff.push(c);\r\n    }\r\n  }\r\n  return diff.length === 0 ? null : diff;\r\n}\r\n\r\nfunction getClassList(className: string | undefined) {\r\n  return new Set(className ? className.trim().split(/\\s+/) : []);\r\n}","import { Map } from 'maplibre-gl';\r\nimport type { CustomLayerInterface, CustomRenderMethodInput } from 'maplibre-gl';\r\n\r\nexport type {\r\n  Map as MapboxInstance,\r\n  CustomLayerInterface as CustomLayerOptions,\r\n  CustomRenderMethodInput as CustomRenderOptions,\r\n};\r\n","import * as React from 'react';\r\nimport type { CustomLayerProps } from '../../react-maplibre/components/custom-layer';\r\nimport { CustomLayer } from '../../react-maplibre/components/custom-layer';\r\nimport { ThreeboxContext } from './threebox';\r\n\r\nexport type ThreeboxLayerProps = Pick<CustomLayerProps, 'id' | 'beforeId' | 'children'> & {};\r\n\r\nexport type ThreeboxLayerContextValue = {\r\n  layerId: string;\r\n};\r\n\r\nexport const ThreeboxLayerContext = React.createContext<ThreeboxLayerContextValue | null>(null);\r\n\r\nlet layerCounter = 0;\r\n\r\nexport const ThreeboxLayer: React.FC<ThreeboxLayerProps> = ({ id, beforeId, children }) => {\r\n  const { threebox } = React.useContext(ThreeboxContext) || {};\r\n  const tb = threebox?.getThreebox();\r\n\r\n  const layerId = React.useMemo(() => id || `threebox-layer-${layerCounter++}`, [id]);\r\n\r\n  const mountFunction = React.useCallback(() => {\r\n    if (tb) {\r\n      tb.update();\r\n      tb.map.repaint = true;\r\n    }\r\n  }, [tb]);\r\n\r\n  const unmountFunction = React.useCallback(() => {\r\n    if (tb) {\r\n      tb.clear(layerId, true);\r\n    }\r\n  }, [tb, layerId]);\r\n\r\n  const contextValue = React.useMemo(() => ({ layerId }), [layerId]);\r\n\r\n  const layerProps = React.useMemo(\r\n    () => ({\r\n      onAdd: mountFunction,\r\n      render: mountFunction,\r\n      onRemove: unmountFunction,\r\n      beforeId,\r\n      id: layerId,\r\n    }),\r\n    [layerId, beforeId, mountFunction, unmountFunction],\r\n  );\r\n\r\n  return (\r\n    <ThreeboxLayerContext.Provider value={contextValue}>\r\n      <CustomLayer {...layerProps} onMount={mountFunction} onUnmount={unmountFunction}>\r\n        {children}\r\n      </CustomLayer>\r\n    </ThreeboxLayerContext.Provider>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { useMap } from 'react-map-gl/maplibre';\r\nimport type { ThreeboxPluginOptions } from '../types/lib';\r\nimport type { ThreeboxRef } from '../threebox/create-ref';\r\nimport type { MapboxInstance } from '../../react-maplibre/types/lib';\r\nimport { createThreeboxRef } from '../threebox/create-ref';\r\nimport { MountedThreeboxContext } from './use-threebox';\r\nimport ThreeboxPlugin from '../threebox/threebox-plugin';\r\nimport { deepEqual } from '../../../utils/deep-equal';\r\nimport useIsomorphicLayoutEffect from '../../../utils/use-isomorphic-layout-effect';\r\n\r\nexport type ThreeboxContextValue = {\r\n  map?: MapboxInstance;\r\n  threebox?: ThreeboxRef;\r\n};\r\n\r\nexport const ThreeboxContext = React.createContext<ThreeboxContextValue | null>(null);\r\n\r\nexport type ThreeboxProps = ThreeboxPluginOptions & {\r\n  id?: string;\r\n  mapId?: string;\r\n  children?: React.ReactNode;\r\n  onLoad?: () => void;\r\n  onError?: (error: Error) => void;\r\n};\r\n\r\nconst defaultOptions: ThreeboxProps = {\r\n  defaultLights: true,\r\n  enableSelectingFeatures: true,\r\n  enableSelectingObjects: true,\r\n  enableDraggingObjects: false,\r\n  enableRotatingObjects: false,\r\n  enableTooltips: false,\r\n  enableHelpTooltips: false,\r\n  multiLayer: true,\r\n  orthographic: false,\r\n  cache: {\r\n    cacheName: 'threebox-models',\r\n    maxAge: 1 * 24 * 60 * 60 * 1000,\r\n    maxCacheEntries: 200,\r\n  },\r\n};\r\n\r\nconst _Threebox = (props: ThreeboxProps, ref: React.Ref<ThreeboxRef>) => {\r\n  const { id, mapId, children, onError, onLoad, ...options } = props;\r\n  const mapRef = useMap();\r\n  const mountedThreeboxContext = React.useContext(MountedThreeboxContext);\r\n  const [tbInstance, setTbInstance] = React.useState<ThreeboxPlugin | null>(null);\r\n  const initialOptionsRef = React.useRef<ThreeboxPluginOptions>(options);\r\n  const { current: contextValue } = React.useRef<ThreeboxContextValue>({\r\n    threebox: undefined,\r\n    map: undefined,\r\n  });\r\n\r\n  const tbOptions = React.useMemo(() => {\r\n    const newOptions = { ...options };\r\n    delete newOptions.realSunlight;\r\n    delete newOptions.realSunlightHelper;\r\n    delete newOptions.sky;\r\n    delete newOptions.terrain;\r\n    return { ...defaultOptions, ...newOptions };\r\n  }, [\r\n    options.defaultLights,\r\n    options.enableSelectingFeatures,\r\n    options.enableSelectingObjects,\r\n    options.enableDraggingObjects,\r\n    options.enableRotatingObjects,\r\n    options.enableTooltips,\r\n    options.enableHelpTooltips,\r\n    options.multiLayer,\r\n    options.orthographic,\r\n    options.cache?.cacheName,\r\n    options.cache?.maxAge,\r\n    options.cache?.maxCacheEntries,\r\n  ]);\r\n\r\n  React.useEffect(() => {\r\n    let isMounted = true;\r\n    let tbPlugin: ThreeboxPlugin | null = null;\r\n    const mapInstance = mapRef?.[mapId || 'current']?.getMap();\r\n\r\n    try {\r\n      if (!isMounted) {\r\n        return;\r\n      }\r\n\r\n      if (!tbPlugin) {\r\n        mapInstance?.on('style.load', () => {\r\n          tbPlugin = new ThreeboxPlugin(tbOptions, mapInstance);\r\n          const tbRef = createThreeboxRef(tbPlugin);\r\n          contextValue.threebox = tbRef;\r\n          contextValue.map = mapInstance;\r\n          onLoad?.();\r\n          setTbInstance(tbPlugin);\r\n          mountedThreeboxContext?.mountThreebox(contextValue.threebox!, id);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      if (onError) {\r\n        onError(error instanceof Error ? error : new Error(String(error)));\r\n      } else {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      if (tbPlugin) {\r\n        mountedThreeboxContext?.unmountThreebox(id);\r\n        tbPlugin.destroy();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useIsomorphicLayoutEffect(() => {\r\n    if (tbInstance && initialOptionsRef.current) {\r\n      if (!deepEqual(options, initialOptionsRef.current)) {\r\n        mountedThreeboxContext?.unmountThreebox(id);\r\n        tbInstance.destroy();\r\n        throw new Error('Threebox props cannot be changed after initialization');\r\n      }\r\n    }\r\n  }, [options, tbInstance]);\r\n\r\n  React.useImperativeHandle(ref, () => contextValue.threebox!, [tbInstance]);\r\n\r\n  return (\r\n    tbInstance && (\r\n      <ThreeboxContext.Provider value={contextValue}>{children}</ThreeboxContext.Provider>\r\n    )\r\n  );\r\n};\r\n\r\nexport const Threebox = React.forwardRef(_Threebox);\r\n","import type { ThreeboxInstance } from '..//types/lib';\r\nimport type Threebox from './threebox-plugin';\r\n\r\nexport type ThreeboxRef = ThreeboxInstance & {\r\n  getThreebox: () => ThreeboxInstance | undefined;\r\n  [key: string]: any;\r\n};\r\n\r\nexport function createThreeboxRef(tbInstance: Threebox): ThreeboxRef | undefined {\r\n  if (!tbInstance) {\r\n    return undefined;\r\n  }\r\n\r\n  let tb: ThreeboxInstance | undefined = tbInstance.tb;\r\n\r\n  if (!tb) {\r\n    return undefined;\r\n  }\r\n\r\n  const result: ThreeboxRef = {\r\n    getThreebox: () => tb,\r\n  };\r\n\r\n  for (const key of getMethodNames(tb)) {\r\n    if (!(key in result)) {\r\n      result[key] = tb[key].bind(tb);\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction getMethodNames(obj: Record<string, any>) {\r\n  const result = new Set<string>();\r\n\r\n  let proto = obj;\r\n  while (proto) {\r\n    for (const key of Object.getOwnPropertyNames(proto)) {\r\n      if (\r\n        key[0] !== '_' &&\r\n        typeof obj[key] === 'function' &&\r\n        key !== 'fire' &&\r\n        key !== 'setEventedParent'\r\n      ) {\r\n        result.add(key);\r\n      }\r\n    }\r\n    proto = Object.getPrototypeOf(proto);\r\n  }\r\n  return Array.from(result);\r\n}\r\n","import * as React from 'react';\r\nimport type { ThreeboxRef } from '../threebox/create-ref';\r\nimport { ThreeboxContext } from './threebox';\r\n\r\nexport type MountedThreeboxContextValue = {\r\n  threeboxes: { [id: string]: ThreeboxRef };\r\n  mountThreebox: (tb: ThreeboxRef, id: string | undefined) => void;\r\n  unmountThreebox: (id: string | undefined) => void;\r\n};\r\n\r\nexport const MountedThreeboxContext = React.createContext<MountedThreeboxContextValue | null>(null);\r\n\r\nexport const ThreeboxProvider: React.FC<React.PropsWithChildren> = ({ children }) => {\r\n  const [threeboxes, setThreeboxes] = React.useState<{ [id: string]: ThreeboxRef }>({});\r\n\r\n  const mountThreebox = React.useCallback((tb: ThreeboxRef, id: string | undefined = 'default') => {\r\n    setThreeboxes((currTbs) => {\r\n      if (id === 'current') {\r\n        throw new Error('\"current\" cannot be used as a Threebox id');\r\n      }\r\n      if (currTbs[id]) {\r\n        throw new Error(`Multiple Threebox instances with the same id: ${id}`);\r\n      }\r\n      return { ...currTbs, [id]: tb };\r\n    });\r\n  }, []);\r\n\r\n  const unmountThreebox = React.useCallback((id: string | undefined = 'default') => {\r\n    setThreeboxes((currTbs) => {\r\n      if (!!currTbs[id]) {\r\n        const nextTbs = { ...currTbs };\r\n        delete nextTbs[id];\r\n        return nextTbs;\r\n      }\r\n      return currTbs;\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <MountedThreeboxContext.Provider\r\n      value={{\r\n        threeboxes,\r\n        mountThreebox,\r\n        unmountThreebox,\r\n      }}\r\n    >\r\n      {children}\r\n    </MountedThreeboxContext.Provider>\r\n  );\r\n};\r\n\r\nexport type ThreeboxCollection = {\r\n  [id: string]: ThreeboxRef | undefined;\r\n  current?: ThreeboxRef;\r\n};\r\n\r\nexport const useThreebox = (): ThreeboxCollection => {\r\n  const tbs = React.useContext(MountedThreeboxContext)?.threeboxes;\r\n  const currTb = React.useContext(ThreeboxContext);\r\n\r\n  const tbsWithCurrent = React.useMemo(() => {\r\n    return { ...tbs, current: currTb?.threebox };\r\n  }, [tbs, currTb]);\r\n\r\n  return tbsWithCurrent as ThreeboxCollection;\r\n};\r\n","import { Threebox } from 'threebox-plugin';\r\n\r\ntype ThreeboxPluginOptions = {\r\n  /** Whether to add some default lighting to the scene. If no lighting added, most objects in the scene will render as black\r\n   * @default false\r\n   */\r\n  defaultLights?: boolean;\r\n  /** It sets lights that simulate Sun position for the map center coords map.getCenter and user local datetime new Date(). This sunlight can be updated through tb.setSunlight method. It calls internally to suncalc module.\r\n   * @default false\r\n   * @deprecated Internal use only. Do not set this property.\r\n   */\r\n  realSunlight?: boolean;\r\n  /** It sets if a light helper will be shown when realSunlight is true.\r\n   * @default false\r\n   * @deprecated Internal use only. Do not set this property.\r\n   */\r\n  realSunlightHelper?: boolean;\r\n  /** Color of line. Unlike other Threebox objects, this color will render on screen precisely as specified, regardless of scene lighting\r\n   * @default true\r\n   */\r\n  passiveRendering?: boolean;\r\n  /** Enables the Mouseover and Selection of fill-extrusion features. This will fire the event SelectedFeatureChange\r\n   * @default false\r\n   */\r\n  enableSelectingFeatures?: boolean;\r\n  /** Enables the Mouseover and Selection of 3D objects. This will fire the event SelectedChange. This value will set the options.bbx value of the objects created.\r\n   * @default false\r\n   */\r\n  enableSelectingObjects?: boolean;\r\n  /** Enables to the option to Drag a 3D object. This will fire the event ObjectDragged where draggedAction = 'translate' or draggedAction = 'altitude'\r\n   * @default false\r\n   */\r\n  enableDraggingObjects?: boolean;\r\n  /** Enables to the option to Drag a 3D object. This will fire the event ObjectDragged where draggedAction = 'rotate'\r\n   * @default false\r\n   */\r\n  enableRotatingObjects?: boolean;\r\n  /** Enables the default tooltips on fill-extrusion features and 3D Objects\r\n   * @default false\r\n   */\r\n  enableTooltips?: boolean;\r\n  /** Enables the default help tooltips when an object is being moved, rotated or measured.\r\n   * @default false\r\n   */\r\n  enableHelpTooltips?: boolean;\r\n  /** Enables the option for multi layer pages where a default layer will be created internally that will manage the tb.update calls\r\n   * @default false\r\n   */\r\n  multiLayer?: boolean;\r\n  /** Enables the option to set a THREE.OrthographicCamera instead of a THREE.PerspectiveCamera which is the default in Mapbox\r\n   * @default false\r\n   */\r\n  orthographic?: boolean;\r\n  /** Enables to set the FOV of the default THREE.PerspectiveCamera. This value has no effect if orthographic: true\r\n   * @default ThreeboxConstants.FOV_DEGREES\r\n   */\r\n  fov?: number;\r\n  /** It sets a built-in atmospheric layer initially set with the time and the map center position. This layer is automatically updated if realSunlight is also true, but it can be updated separately through tb.updateSunSky(tb.getSunSky()) method call.\r\n   * @deprecated Internal use only. Do not set this property.\r\n   */\r\n  sky?: boolean;\r\n  /** It sets a built-in terrain layer initially set with the time and the map center position. This layer is automatically updated if realSunlight is also true, but it can be updated separately through tb.updateSunSky(tb.getSunSky()) method call.\r\n   * @deprecated Internal use only. Do not set this property.\r\n   */\r\n  terrain?: boolean;\r\n  /** Caching options for 3D models loaded. Caching is done using Cache Storage. */\r\n  cache?: {\r\n    /** Name of the cache storage where models will be stored.\r\n     * @default 'threebox-cache'\r\n     */\r\n    cacheName?: string;\r\n    /** Maximum age of a cached model in milliseconds. Default is 7 days.\r\n     * @default 7 * 24 * 60 * 60 * 1000\r\n     */\r\n    maxAge?: number;\r\n    /** Maximum number of entries in the cache. Default is 100.\r\n     * @default 100\r\n     */\r\n    maxCacheEntries?: number;\r\n  };\r\n};\r\n\r\nexport { Threebox as ThreeboxInstance };\r\nexport type { ThreeboxPluginOptions };\r\n","import type { ThreeboxPluginOptions } from '../types/lib';\r\nimport type { MapboxInstance } from '../../react-maplibre/types/lib';\r\nimport { ThreeboxInstance } from '../types/lib';\r\nimport assert from '../../../utils/assert';\r\n\r\nexport default class ThreeboxPlugin {\r\n  private _tb: ThreeboxInstance | undefined = undefined;\r\n  private _map: MapboxInstance | undefined = undefined;\r\n  props: ThreeboxPluginOptions;\r\n\r\n  constructor(props: ThreeboxPluginOptions, map?: MapboxInstance) {\r\n    this.props = props;\r\n    this._map = map;\r\n    this._initialize(map);\r\n  }\r\n\r\n  get tb(): ThreeboxInstance | undefined {\r\n    return this._tb;\r\n  }\r\n\r\n  get map(): MapboxInstance | undefined {\r\n    return this._map;\r\n  }\r\n\r\n  _initialize(map?: MapboxInstance) {\r\n    assert(map, 'Map is required to initialize Threebox');\r\n    \r\n    if (Object.getOwnPropertyDescriptor(map, 'version') === undefined) {\r\n      Object.defineProperty(map, 'version', { get: function () { return \"1.0\"; } });\r\n    }\r\n    const tb = new ThreeboxInstance(map, map?.getCanvas().getContext('webgl'), this.props);\r\n    this._tb = tb;\r\n  }\r\n\r\n  destroy() {\r\n    assert(this._tb, 'Threebox is not initialized');\r\n\r\n    this._tb?.dispose();\r\n  }\r\n\r\n  redraw() {\r\n    assert(this._tb, 'Threebox is not initialized');\r\n\r\n    this._tb?.update();\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { flushSync } from 'react-dom';\r\nimport type { ModelLoaderOptions } from '../types/common';\r\nimport type { ThreeboxInstance } from '../types/lib';\r\nimport { ThreeboxContext } from './threebox';\r\nimport { deepEqual } from '../../../utils/deep-equal';\r\nimport assert from '../../../utils/assert';\r\n\r\nexport type ModelLoaderProps = ModelLoaderOptions & {\r\n  children?: React.ReactNode;\r\n  onLoad?: (model: any) => void;\r\n  onError?: (error: any) => void;\r\n};\r\n\r\nconst updateModel = (\r\n  tb: ThreeboxInstance,\r\n  props: ModelLoaderOptions,\r\n  prevProps: ModelLoaderOptions,\r\n  model: any,\r\n) => {\r\n  assert(props.id === prevProps.id, 'model id changed');\r\n\r\n  if (\r\n    props.type !== prevProps.type ||\r\n    props.obj !== prevProps.obj ||\r\n    props.units !== prevProps.units\r\n  ) {\r\n    console.warn('Model properties changed, reloading the model');\r\n    model.dispose();\r\n    return null;\r\n  }\r\n\r\n  if (!deepEqual(props.rotation, prevProps.rotation)) {\r\n    model.setRotationAxis(props.rotation);\r\n  }\r\n  if (!deepEqual(props.scale, prevProps.scale)) {\r\n    const unitsPerMeter = Number(model.unitsPerMeter);\r\n    if (typeof props.scale === 'number') {\r\n      const s = unitsPerMeter * props.scale;\r\n      model.scale.set(s, s, s);\r\n    } else if (typeof props.scale === 'object') {\r\n      const newScale = Object.fromEntries(\r\n        Object.entries(props.scale).map(([key, value]) => [key, unitsPerMeter * value]),\r\n      );\r\n      model.scale.set(newScale.x, newScale.y, newScale.z);\r\n    }\r\n  }\r\n  if (props.anchor !== prevProps.anchor) {\r\n    model.setAnchor(props.anchor);\r\n  }\r\n  if (deepEqual(props.feature, prevProps.feature)) {\r\n    model.userData.feature = props.feature;\r\n  }\r\n  model.userData.model = { ...props };\r\n  return model;\r\n};\r\n\r\nconst updateDupModels = (\r\n  tb: ThreeboxInstance,\r\n  props: ModelLoaderOptions,\r\n  prevProps: ModelLoaderOptions,\r\n  dupModelsRef: React.RefObject<Map<string, any>>,\r\n) => {\r\n  dupModelsRef.current.forEach((dupModel, key) => {\r\n    try {\r\n      const id = props.id as string;\r\n      if (dupModel?.userData?.model?.id === id) {\r\n        updateModel(tb, props, prevProps, dupModel);\r\n      }\r\n    } catch (e) {\r\n      console.warn(`Error updating duplicate model ${key}:`, e);\r\n    }\r\n  });\r\n};\r\n\r\nconst createModel = async (tb: ThreeboxInstance, props: ModelLoaderOptions) => {\r\n  if (tb) {\r\n    const model = await tb.loadObj(props);\r\n    model.userData.model = { ...props };\r\n    model.userData.isRendered = false;\r\n    return model;\r\n  }\r\n  return null;\r\n};\r\n\r\nconst getModelById = (tb: ThreeboxInstance, id: string) => {\r\n  return tb?.world.children.find((child: any) => {\r\n    return child.userData.model.id === id;\r\n  });\r\n};\r\n\r\nlet modelCounter = 0;\r\nconst defaultProps: ModelLoaderOptions = {\r\n  id: `model-${modelCounter++}`,\r\n  type: 'glb',\r\n  obj: '',\r\n  units: 'meters',\r\n  rotation: { x: 90, y: 180, z: 0 },\r\n  scale: 1,\r\n  anchor: 'auto',\r\n  bbox: false,\r\n  clone: true,\r\n};\r\n\r\nexport const ModelLoader: React.FC<ModelLoaderProps> = ({\r\n  children,\r\n  onLoad,\r\n  onError,\r\n  ...props\r\n}) => {\r\n  const { threebox, map } = React.useContext(ThreeboxContext) || {};\r\n  const tb = threebox?.getThreebox();\r\n  const propsRef = React.useRef<ModelLoaderProps>({} as ModelLoaderProps);\r\n  const dupModelsRef = React.useRef<Map<string, any>>(new Map());\r\n  const [modelInstance, setModelInstance] = React.useState<any>(null);\r\n\r\n  const loaderProps = React.useMemo(() => {\r\n    const newProps = { ...props };\r\n    delete newProps.mtl;\r\n    delete newProps.bin;\r\n    delete newProps.adjustment;\r\n    delete newProps.normalize;\r\n    delete newProps.tooltip;\r\n    delete newProps.bbox;\r\n    delete newProps.raycasted;\r\n    delete newProps.clone;\r\n    delete newProps.defaultAnimation;\r\n    return { ...defaultProps, ...newProps };\r\n  }, [\r\n    props.anchor,\r\n    props.feature,\r\n    props.id,\r\n    props.obj,\r\n    props.rotation,\r\n    props.scale,\r\n    props.type,\r\n    props.units,\r\n  ]);\r\n\r\n  const cleanupDupModels = React.useCallback(() => {\r\n    dupModelsRef.current.forEach((dupModel) => {\r\n      try {\r\n        dupModel.dispose();\r\n      } catch (e) {\r\n        console.warn('Error disposing duplicate model:', e);\r\n      }\r\n    });\r\n    dupModelsRef.current.clear();\r\n  }, []);\r\n\r\n  const loadModel = React.useCallback(async () => {\r\n    if (!tb) return;\r\n    const id = loaderProps.id as string;\r\n    let model: any = map && map.style && map.style._loaded && getModelById(tb, id);\r\n    let needsNewDupModels = false;\r\n\r\n    try {\r\n      if (model) {\r\n        // Update main model\r\n        model = updateModel(tb, loaderProps, propsRef.current, model);\r\n\r\n        // If main model was disposed (props changed requiring recreation)\r\n        if (model) {\r\n          // Update main model and all duplicate models\r\n          updateDupModels(tb, loaderProps, propsRef.current, dupModelsRef);\r\n        } else {\r\n          // Model was disposed, need to create new one and regenerate duplicates\r\n          model = await createModel(tb, loaderProps);\r\n          needsNewDupModels = true;\r\n        }\r\n      } else {\r\n        // No existing model, create new one\r\n        model = await createModel(tb, loaderProps);\r\n        needsNewDupModels = true;\r\n      }\r\n\r\n      if (needsNewDupModels) {\r\n        cleanupDupModels();\r\n        flushSync(() => setModelInstance(null));\r\n        setModelInstance(model);\r\n      }\r\n\r\n      onLoad?.(model);\r\n      propsRef.current = loaderProps;\r\n    } catch (error) {\r\n      console.error(`Error loading model ${id}:`, error);\r\n      onError?.(error);\r\n    } finally {\r\n      if (!needsNewDupModels) {\r\n        setModelInstance(model || null);\r\n      }\r\n    }\r\n  }, [tb, map, loaderProps, onLoad, onError, cleanupDupModels]);\r\n\r\n  React.useEffect(() => {\r\n    loadModel();\r\n  }, [loadModel]);\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      cleanupDupModels();\r\n    };\r\n  }, [cleanupDupModels]);\r\n\r\n  const childrenWithModel = React.useMemo(() => {\r\n    if (!modelInstance) {\r\n      return null;\r\n    }\r\n\r\n    return React.Children.map(children, (child) => {\r\n      if (child && React.isValidElement(child)) {\r\n        const childProps = child.props as any;\r\n        const childKey = childProps.id || child.key;\r\n        let dupModel = dupModelsRef.current.get(childKey);\r\n\r\n        if (!dupModel) {\r\n          dupModel = modelInstance?.duplicate();\r\n          dupModelsRef.current.set(childKey, dupModel);\r\n        }\r\n        return React.cloneElement(child as React.ReactElement<any>, { model: dupModel });\r\n      }\r\n      return child;\r\n    });\r\n  }, [modelInstance, children]);\r\n\r\n  return childrenWithModel;\r\n};\r\n","import * as React from 'react';\r\nimport { gsap } from 'gsap';\r\nimport type { ModelRendererOptions } from '../types/common';\r\nimport type { ThreeboxInstance } from '../types/lib';\r\nimport { ThreeboxContext } from './threebox';\r\nimport { deepEqual } from '../../../utils/deep-equal';\r\nimport { ThreeboxLayerContext } from './threebox-layer';\r\nimport updateProperties from '../../../utils/update-properties';\r\nimport useIsomorphicLayoutEffect from '../../../utils/use-isomorphic-layout-effect';\r\n\r\nexport type ModelRendererProps = ModelRendererOptions & {\r\n  model?: any;\r\n  layerId?: string;\r\n  onRender?: (model: any) => void;\r\n};\r\n\r\nconst pointerEvents = {\r\n  SelectedChange: 'onSelectedChange',\r\n  Wireframed: 'onWireframed',\r\n  IsPlayingChanged: 'onIsPlayingChanged',\r\n  ObjectDragged: 'onDraggedObject',\r\n  ObjectMouseOver: 'onObjectMouseOver',\r\n  ObjectMouseOut: 'onObjectMouseOut',\r\n} as const;\r\n\r\nconst propertyNames = ['wireframe', 'visibility', 'hidden'] as (keyof ModelRendererOptions)[];\r\n\r\nconst addModel = (tb: ThreeboxInstance, props: ModelRendererOptions, model: any) => {\r\n  const currentScale = model.scale.z;\r\n  const originZ = currentScale / 2;\r\n  const targetZ = currentScale;\r\n  const renderingEffect = props.renderingEffect;\r\n\r\n  if (renderingEffect) {\r\n    model.scale.z = originZ;\r\n  }\r\n\r\n  setTimeout(() => {\r\n    tb.add(model, props.layerId);\r\n  }, 50);\r\n\r\n  if (renderingEffect) {\r\n    const duration = (renderingEffect.duration || 500) / 1000;\r\n    const ease = renderingEffect.easing || ((t: number) => t);\r\n    setTimeout(() => {\r\n      gsap.to(model.scale, { z: targetZ, duration: duration, ease: ease });\r\n    }, 100);\r\n  }\r\n};\r\n\r\nconst rerenderModel = (\r\n  tb: ThreeboxInstance,\r\n  props: ModelRendererOptions,\r\n  prevProps: ModelRendererOptions,\r\n  defaultProps: ModelRendererOptions,\r\n  model: any,\r\n) => {\r\n  model.name = props.id;\r\n  model = updateProperties(props, prevProps, defaultProps, model, propertyNames);\r\n\r\n  if (props.coords && !deepEqual(props.coords, prevProps.coords)) {\r\n    model.setCoords(props.coords);\r\n  }\r\n\r\n  if (props.rotation && !deepEqual(props.rotation, prevProps.rotation)) {\r\n    model.setRotation(props.rotation);\r\n  }\r\n\r\n  if (props.scale && !deepEqual(props.scale, prevProps.scale)) {\r\n    model.setScale(props.scale);\r\n  }\r\n\r\n  if (props.animationOptions && !deepEqual(props.animationOptions, prevProps.animationOptions)) {\r\n    model.playAnimation(props.animationOptions);\r\n  } else if (!props.animationOptions && prevProps.animationOptions) {\r\n    model.stop();\r\n  }\r\n\r\n  if (props.pathOptions && !deepEqual(props.pathOptions, prevProps.pathOptions)) {\r\n    model.followPath(props.pathOptions, props.onFollowPathFinish);\r\n  } else if (!props.pathOptions && prevProps.pathOptions) {\r\n    model.stop();\r\n  }\r\n\r\n  for (const eventName in pointerEvents) {\r\n    const eveName = eventName as keyof typeof pointerEvents;\r\n    const eventProps = props[pointerEvents[eveName] as keyof ModelRendererOptions];\r\n    const prevEventProps = prevProps[pointerEvents[eveName] as keyof ModelRendererOptions];\r\n\r\n    if (eventProps !== prevEventProps) {\r\n      if (prevEventProps) {\r\n        model.removeEventListener(eventName, prevEventProps);\r\n      }\r\n      if (eventProps) {\r\n        model.addEventListener(eventName, eventProps, false);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst defaultProps: ModelRendererOptions = {\r\n  id: Math.random().toString(36).substring(2, 9),\r\n  wireframe: false,\r\n  visibility: true,\r\n  hidden: false,\r\n};\r\n\r\nexport const ModelRenderer: React.FC<ModelRendererProps> = ({ model, onRender, ...props }) => {\r\n  const { threebox, map } = React.useContext(ThreeboxContext) || {};\r\n  const { layerId } = React.useContext(ThreeboxLayerContext) || {};\r\n  const tb = threebox?.getThreebox();\r\n  const propsRef = React.useRef<ModelRendererProps>({} as ModelRendererProps);\r\n\r\n  const renderProps = React.useMemo(\r\n    () => ({\r\n      ...defaultProps,\r\n      ...props,\r\n      layerId: layerId,\r\n    }),\r\n    [props, layerId],\r\n  );\r\n\r\n  useIsomorphicLayoutEffect(() => {\r\n    if (model) {\r\n      rerenderModel(tb!, renderProps, propsRef.current, defaultProps, model);\r\n\r\n      const isRendered = model.userData.isRendered;\r\n      if (!isRendered) {\r\n        addModel(tb!, renderProps, model);\r\n        model.userData.isRendered = true;\r\n        onRender?.(model);\r\n      }\r\n    } else {\r\n      throw new Error('Model not found in Threebox instance.');\r\n    }\r\n\r\n    propsRef.current = renderProps;\r\n  }, [tb, model, onRender, renderProps]);\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      if (tb) {\r\n        tb.removeByName(props.id);\r\n      }\r\n    };\r\n  }, [tb, props.id, map]);\r\n\r\n  return null;\r\n};\r\n","import { deepEqual } from './deep-equal';\r\n\r\nexport default function updateProperties<T extends TProps, TProps>(\r\n  nextProps: TProps,\r\n  currProps: TProps,\r\n  defProps: TProps,\r\n  obj: T,\r\n  propsNames: (keyof TProps)[],\r\n) {\r\n  for (const propName of propsNames) {\r\n    const newValue = nextProps[propName];\r\n    const oldValue = currProps[propName];\r\n    if (!deepEqual(newValue, oldValue)) {\r\n      const defaultValue = defProps[propName];\r\n      obj[propName] = (newValue || defaultValue) as T[keyof TProps];\r\n    }\r\n  }\r\n  return obj;\r\n}\r\n","import * as React from 'react';\r\nimport type { ModelLoaderProps } from './model-loader';\r\nimport type { ModelRendererProps } from './model-renderer';\r\nimport type { ModelBatchItem } from '../types/common';\r\nimport { ModelRenderer } from './model-renderer';\r\nimport { ModelLoader } from './model-loader';\r\n\r\nexport interface ModelBatcherProps {\r\n  models: ModelBatchItem[];\r\n  batchSize?: number;\r\n  batchDelay?: number;\r\n}\r\n\r\nexport interface BatchedModelProps {\r\n  batchIndex: number;\r\n  batchSize: number;\r\n  batchDelay: number;\r\n}\r\n\r\nexport interface BatchedModelRendererProps extends ModelRendererProps, BatchedModelProps {}\r\nexport interface BatchedModelLoaderProps extends ModelLoaderProps, BatchedModelProps {}\r\n\r\nconst useShouldRender = (batchIndex: number, batchSize: number, batchDelay: number) => {\r\n  const [shouldRender, setShouldRender] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    const delay = Math.floor(batchIndex / batchSize) * batchDelay;\r\n    const timer = setTimeout(() => setShouldRender(true), delay);\r\n    return () => clearTimeout(timer);\r\n  }, [batchIndex, batchSize, batchDelay]);\r\n\r\n  return shouldRender;\r\n};\r\n\r\nconst BatchedModelRenderer: React.FC<BatchedModelRendererProps> = ({\r\n  batchIndex,\r\n  batchSize,\r\n  batchDelay,\r\n  ...props\r\n}) => {\r\n  const shouldRender = useShouldRender(batchIndex, batchSize, batchDelay);\r\n  if (!shouldRender) return null;\r\n  return <ModelRenderer {...props} />;\r\n};\r\n\r\nconst BatchedModelLoader: React.FC<BatchedModelLoaderProps> = ({\r\n  batchIndex,\r\n  batchSize,\r\n  batchDelay,\r\n  ...props\r\n}) => {\r\n  const shouldRender = useShouldRender(batchIndex, batchSize, batchDelay);\r\n  if (!shouldRender) return null;\r\n  return <ModelLoader {...props} />;\r\n};\r\n\r\nexport const ModelBatcher: React.FC<ModelBatcherProps> = ({\r\n  models,\r\n  batchSize = 10,\r\n  batchDelay = 100,\r\n}) => {\r\n  return models.map((model, loaderIndex) => (\r\n    <BatchedModelLoader\r\n      key={model.loader.id}\r\n      {...(model.loader as ModelLoaderProps)}\r\n      batchIndex={loaderIndex}\r\n      batchSize={batchSize}\r\n      batchDelay={batchDelay}\r\n    >\r\n      {model.renderers.map((props, renderIndex) => (\r\n        <BatchedModelRenderer\r\n          key={props.id}\r\n          {...(props as ModelRendererProps)}\r\n          batchIndex={renderIndex}\r\n          batchSize={batchSize}\r\n          batchDelay={batchDelay}\r\n        />\r\n      ))}\r\n    </BatchedModelLoader>\r\n  ));\r\n};\r\n","import * as React from 'react';\r\nimport { useMap } from 'react-map-gl/maplibre';\r\nimport type { EffectCanvasParams, EffectManagerContext } from '../types/common';\r\nimport { EffectManager } from '../threejs/graphics/effect-manager';\r\nimport { deepEqual } from '../../../utils/deep-equal';\r\nimport useIsomorphicLayoutEffect from '../../../utils/use-isomorphic-layout-effect';\r\n\r\nexport type EffectCanvasContextValue = EffectManagerContext;\r\nexport const EffectCanvasContext = React.createContext<EffectCanvasContextValue | null>(null);\r\n\r\nexport type EffectCanvasProps = EffectCanvasParams & {\r\n  id?: string;\r\n  mapId?: string;\r\n  children?: React.ReactNode;\r\n  onLoad?: () => void;\r\n  onError?: (error: Error) => void;\r\n};\r\n\r\nconst _EffectCanvas = (props: EffectCanvasProps, ref: React.Ref<EffectCanvasContextValue>) => {\r\n  const { id, mapId, children, onError, onLoad, ...options } = props;\r\n  const mapRef = useMap();\r\n  const [effectManager, setEffectManager] = React.useState<EffectManager | null>(null);\r\n  const optionsRef = React.useRef<EffectCanvasParams>(options);\r\n  const { current: contextValue } = React.useRef({} as EffectCanvasContextValue);\r\n\r\n  const canvasOptions = React.useMemo(() => options, [Object.values(options).join(',')]);\r\n\r\n  React.useEffect(() => {\r\n    let isMounted = true;\r\n    let effectInstance: EffectManager | null = null;\r\n    const mapInstance = mapRef?.[mapId || 'current']?.getMap();\r\n\r\n    try {\r\n      if (!isMounted) {\r\n        return;\r\n      }\r\n\r\n      if (!effectInstance) {\r\n        effectInstance = new EffectManager(canvasOptions, mapInstance);\r\n        const context = effectInstance.context;\r\n        if (context) {\r\n          contextValue.scene = context.scene;\r\n          contextValue.camera = context.camera;\r\n          contextValue.renderer = context.renderer;\r\n          contextValue.group = context.group;\r\n          contextValue.light = context.light;\r\n          contextValue.bloom = context.bloom;\r\n          contextValue.container = context.container;\r\n        }\r\n        onLoad?.();\r\n        setEffectManager(effectInstance);\r\n      }\r\n    } catch (error) {\r\n      if (onError) {\r\n        onError(error instanceof Error ? error : new Error(String(error)));\r\n      } else {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      if (effectInstance) {\r\n        effectInstance.destroy();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useIsomorphicLayoutEffect(() => {\r\n    if (effectManager && optionsRef.current) {\r\n      if (!deepEqual(options, optionsRef.current)) {\r\n        effectManager.context?.bloom?.setValues(options!);\r\n      }\r\n      optionsRef.current = options;\r\n    }\r\n  }, [options, effectManager]);\r\n\r\n  React.useImperativeHandle(ref, () => contextValue, [effectManager]);\r\n\r\n  return (\r\n    effectManager && (\r\n      <EffectCanvasContext.Provider value={contextValue}>{children}</EffectCanvasContext.Provider>\r\n    )\r\n  );\r\n};\r\n\r\nexport const EffectCanvas = React.forwardRef(_EffectCanvas);\r\n","import * as THREE from 'three';\r\nimport type { EffectCanvasContext, EffectCanvasParams, EffectManagerContext } from '../../types/common.js';\r\nimport type { MapboxInstance } from '../../../react-maplibre/types/lib.js';\r\nimport { CanvasContainer } from './canvas-container.js';\r\nimport { WebGLShaderManager } from './webgl-shader-manager.js';\r\nimport { CanvasManager } from './canvas-manager.js';\r\nimport { BloomRenderer } from './bloom-renderer.js';\r\n\r\nexport class EffectManager {\r\n  private _canvasContext: EffectCanvasContext | null = null;\r\n  private _canvasContainer: CanvasContainer | null = null;\r\n  private _canvasManager: CanvasManager | null = null;\r\n  private _bloomRenderer: BloomRenderer | null = null;\r\n  private _shaderManager: WebGLShaderManager | null = null;\r\n  private _map: MapboxInstance | null = null;\r\n  private _mapResizing: (() => void) | null = null;\r\n  props: EffectCanvasParams;\r\n\r\n  get context(): EffectManagerContext | null {\r\n    if (!this._canvasContext || !this._bloomRenderer || !this._canvasContainer) {\r\n      return null;\r\n    }\r\n    return {\r\n      scene: this._canvasContext.scene,\r\n      camera: this._canvasContext.camera,\r\n      renderer: this._canvasContext.renderer,\r\n      group: this._canvasContext.group,\r\n      light: this._canvasContext.light,\r\n      bloom: this._bloomRenderer,\r\n      container: this._canvasContainer,\r\n    };\r\n  }\r\n\r\n  constructor(props: EffectCanvasParams, map?: MapboxInstance) {\r\n    this.props = props;\r\n    if (map) {\r\n      this._map = map;\r\n      this.initialize(map);\r\n    }\r\n  }\r\n\r\n  initialize(map: MapboxInstance) {\r\n    map.addLayer({\r\n      id: 'effect-layer',\r\n      type: 'custom',\r\n      renderingMode: '3d',\r\n      onAdd: this._onAdd.bind(this),\r\n      render: this._render.bind(this),\r\n      onRemove: this._onRemove.bind(this),\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    this._onRemove();\r\n\r\n    if (this._map) {\r\n      this._map.removeLayer('effect-layer');\r\n      this._map = null;\r\n    }\r\n  }\r\n\r\n  private _onAdd(map: MapboxInstance, gl: WebGLRenderingContext) {\r\n    const container = map.getCanvas();\r\n    const { clientWidth, clientHeight } = container;\r\n\r\n    // Create and append effect container\r\n    this._canvasContainer = new CanvasContainer(map);\r\n\r\n    // Initialize effect canvas\r\n    this._canvasManager = new CanvasManager(map, this._canvasContainer);\r\n    const { scene, camera, renderer, group, light } = this._canvasManager;\r\n\r\n    // Initialize bloom renderer\r\n    this._bloomRenderer = new BloomRenderer(renderer, scene, camera);\r\n    this._bloomRenderer.setResolution(clientWidth, clientHeight);\r\n    this._bloomRenderer.setValues(this.props);\r\n\r\n    // Initialize WebGL shader manager\r\n    this._shaderManager = new WebGLShaderManager(gl);\r\n\r\n    // Store context\r\n    this._canvasContext = { scene, camera, renderer, group, light };\r\n    this._setMapResizing();\r\n  }\r\n\r\n  private _render() {\r\n    // if (this._map && this._map.repaint) {\r\n    //   this._map.repaint = false;\r\n    // }\r\n\r\n    if (this._canvasManager) {\r\n      this._canvasManager.render();\r\n    }\r\n\r\n    if (this._bloomRenderer) {\r\n      this._bloomRenderer.render();\r\n    }\r\n\r\n    if (this._shaderManager && this._canvasContainer) {\r\n      const { width, height } = this._canvasContainer;\r\n      this._shaderManager.render(this._canvasContainer, width, height);\r\n    }\r\n    \r\n    // if (this._map && !this._map.repaint) {\r\n    //   this._map.triggerRepaint();\r\n    // }\r\n  }\r\n\r\n  private _onRemove(): void {\r\n    if (this._mapResizing) {\r\n      this._removeMapResizing();\r\n    }\r\n\r\n    if (this._canvasContainer) {\r\n      this._canvasContainer.remove();\r\n      this._canvasContainer = null;\r\n    }\r\n\r\n    if (this._canvasManager) {\r\n      this._canvasManager.dispose();\r\n      this._canvasManager = null;\r\n    }\r\n\r\n    if (this._bloomRenderer) {\r\n      this._bloomRenderer.dispose();\r\n      this._bloomRenderer = null;\r\n    }\r\n\r\n    if (this._shaderManager) {\r\n      this._shaderManager?.dispose();\r\n      this._shaderManager = null;\r\n    }\r\n  }\r\n\r\n  private _handleMapResizing(): void {\r\n    if (!this._map) return;\r\n\r\n    const mapCanvas = this._map.getCanvas();\r\n    const width = mapCanvas.width / window.devicePixelRatio;\r\n    const height = mapCanvas.height / window.devicePixelRatio;\r\n\r\n    if (this._canvasContainer) {\r\n      this._canvasContainer.width = width;\r\n      this._canvasContainer.height = height;\r\n      this._canvasContainer.style.width = width + 'px';\r\n      this._canvasContainer.style.height = height + 'px';\r\n    }\r\n\r\n    this._canvasManager?.resize(width, height);\r\n    this._bloomRenderer?.resize(width, height);\r\n  }\r\n\r\n  private _setMapResizing(): void {\r\n    const boundResizing = this._handleMapResizing.bind(this);\r\n\r\n    window.addEventListener('resize', boundResizing);\r\n    this._map?.on('resize', boundResizing);\r\n    this._mapResizing = boundResizing;\r\n  }\r\n\r\n  private _removeMapResizing(): void {\r\n    window.removeEventListener('resize', this._mapResizing!);\r\n    this._map?.off('resize', this._mapResizing!);\r\n    this._mapResizing = null;\r\n  }\r\n}\r\n","import type { MapboxInstance } from '../../../react-maplibre/types/lib.js';\r\n\r\nexport class CanvasContainer extends HTMLCanvasElement {\r\n  constructor(map: MapboxInstance) {\r\n    // Get existing container or create new one\r\n    const mapContainer = map.getContainer();\r\n    const selectorId = '_THREE_CANVAS_CONTAINER_';\r\n    let existingContainer = mapContainer.querySelector(`#${selectorId}`) as HTMLCanvasElement;\r\n\r\n    if (existingContainer) {\r\n      return existingContainer as any;\r\n    }\r\n\r\n    // Create new container\r\n    super();\r\n\r\n    this.id = selectorId;\r\n    this.style.position = 'absolute';\r\n    this.style.zIndex = '99999';\r\n    this.style.pointerEvents = 'none';\r\n    this.style.width = '100%';\r\n    this.style.height = '100%';\r\n\r\n    const mapCanvas = map.getCanvas();\r\n    this.width = mapCanvas.clientWidth;\r\n    this.height = mapCanvas.clientHeight;\r\n\r\n    mapContainer.appendChild(this);\r\n  }\r\n\r\n  dispose(): void {\r\n    this.remove();\r\n  }\r\n}\r\n\r\n// Define custom element\r\nwindow.customElements.define('canvas-container', CanvasContainer, { extends: 'canvas' });\r\n","export type ShaderLocations = {\r\n  position?: number;\r\n  texcoord?: number;\r\n  resolution?: WebGLUniformLocation | null;\r\n  image?: WebGLUniformLocation | null;\r\n};\r\n\r\nexport type ShaderBuffers = {\r\n  position?: WebGLBuffer | null;\r\n  texcoord?: WebGLBuffer | null;\r\n};\r\n\r\nexport class WebGLShaderManager {\r\n  private program: WebGLProgram | null = null;\r\n  private gl: WebGLRenderingContext;\r\n  private locations: ShaderLocations = {};\r\n  private buffers: ShaderBuffers = {};\r\n  private texture: WebGLTexture | null = null;\r\n\r\n  private get vertexShaderSource(): string {\r\n    return `\r\n      attribute vec2 a_position;\r\n      attribute vec2 a_texCoord;\r\n      uniform vec2 u_resolution;\r\n      varying vec2 v_texCoord;\r\n      \r\n      void main() {\r\n        vec2 zeroToOne = a_position / u_resolution;\r\n        vec2 zeroToTwo = zeroToOne * 2.0;\r\n        vec2 clipSpace = zeroToTwo - 1.0;\r\n        gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\r\n        v_texCoord = a_texCoord;\r\n      }\r\n    `;\r\n  }\r\n\r\n  private get fragmentShaderSource(): string {\r\n    return `\r\n      #ifdef GL_ES\r\n      precision mediump float;\r\n      #endif\r\n      \r\n      uniform sampler2D u_image;\r\n      varying vec2 v_texCoord;\r\n      \r\n      void main() {\r\n        gl_FragColor = texture2D(u_image, v_texCoord);\r\n      }\r\n    `;\r\n  }\r\n\r\n  constructor(gl: WebGLRenderingContext) {\r\n    this.gl = gl;\r\n\r\n    // Create shaders\r\n    const vertexShader = this.createShader(this.gl.VERTEX_SHADER, this.vertexShaderSource);\r\n    const fragmentShader = this.createShader(this.gl.FRAGMENT_SHADER, this.fragmentShaderSource);\r\n\r\n    if (!vertexShader || !fragmentShader) {\r\n      throw new Error('Failed to create shaders');\r\n    }\r\n\r\n    // Create program\r\n    this.program = this.createProgram(vertexShader, fragmentShader);\r\n    if (!this.program) {\r\n      throw new Error('Failed to create program');\r\n    }\r\n\r\n    // Get attribute and uniform locations\r\n    this.locations.position = this.gl.getAttribLocation(this.program, 'a_position');\r\n    this.locations.texcoord = this.gl.getAttribLocation(this.program, 'a_texCoord');\r\n    this.locations.resolution = this.gl.getUniformLocation(this.program, 'u_resolution');\r\n    this.locations.image = this.gl.getUniformLocation(this.program, 'u_image');\r\n\r\n    // Create buffers\r\n    this.buffers.position = this.gl.createBuffer();\r\n    this.buffers.texcoord = this.gl.createBuffer();\r\n\r\n    // Create texture\r\n    this.texture = this.gl.createTexture();\r\n\r\n    // Clean up shaders (they're now part of the program)\r\n    this.gl.deleteShader(vertexShader);\r\n    this.gl.deleteShader(fragmentShader);\r\n  }\r\n\r\n  private createShader(type: number, source: string): WebGLShader | null {\r\n    const shader = this.gl.createShader(type);\r\n    if (!shader) {\r\n      console.error('Failed to create shader');\r\n      return null;\r\n    }\r\n\r\n    this.gl.shaderSource(shader, source);\r\n    this.gl.compileShader(shader);\r\n\r\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\r\n      const error = this.gl.getShaderInfoLog(shader);\r\n      console.error(`Shader compilation error: ${error}`);\r\n      this.gl.deleteShader(shader);\r\n      return null;\r\n    }\r\n\r\n    return shader;\r\n  }\r\n\r\n  private createProgram(\r\n    vertexShader: WebGLShader,\r\n    fragmentShader: WebGLShader,\r\n  ): WebGLProgram | null {\r\n    const program = this.gl.createProgram();\r\n    if (!program) {\r\n      console.error('Failed to create program');\r\n      return null;\r\n    }\r\n\r\n    this.gl.attachShader(program, vertexShader);\r\n    this.gl.attachShader(program, fragmentShader);\r\n    this.gl.linkProgram(program);\r\n\r\n    if (!this.gl.getProgramParameter(program, this.gl.LINK_STATUS)) {\r\n      const error = this.gl.getProgramInfoLog(program);\r\n      console.error(`Program linking error: ${error}`);\r\n      this.gl.deleteProgram(program);\r\n      return null;\r\n    }\r\n\r\n    return program;\r\n  }\r\n\r\n  private setRectangle(x: number, y: number, width: number, height: number): void {\r\n    const x1 = x;\r\n    const x2 = x + width;\r\n    const y1 = y;\r\n    const y2 = y + height;\r\n\r\n    this.gl.bufferData(\r\n      this.gl.ARRAY_BUFFER,\r\n      new Float32Array([x1, y1, x2, y1, x1, y2, x1, y2, x2, y1, x2, y2]),\r\n      this.gl.STATIC_DRAW,\r\n    );\r\n  }\r\n\r\n  render(bloomContainer: HTMLCanvasElement, containerWidth: number, containerHeight: number): void {\r\n    if (!this.program || !this.texture) {\r\n      console.warn('WebGL shader not properly initialized');\r\n      return;\r\n    }\r\n\r\n    // Use shader program\r\n    this.gl.useProgram(this.program);\r\n\r\n    // Setup position buffer\r\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.buffers.position!);\r\n    this.setRectangle(0, 0, containerWidth, containerHeight);\r\n\r\n    // Setup texture coordinates (static)\r\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.buffers.texcoord!);\r\n    this.gl.bufferData(\r\n      this.gl.ARRAY_BUFFER,\r\n      new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]),\r\n      this.gl.STATIC_DRAW,\r\n    );\r\n\r\n    // Setup texture\r\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);\r\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\r\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\r\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST);\r\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST);\r\n    this.gl.texImage2D(\r\n      this.gl.TEXTURE_2D,\r\n      0,\r\n      this.gl.RGBA,\r\n      this.gl.RGBA,\r\n      this.gl.UNSIGNED_BYTE,\r\n      bloomContainer,\r\n    );\r\n\r\n    // Setup vertex attributes\r\n    this.gl.enableVertexAttribArray(this.locations.position!);\r\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.buffers.position!);\r\n    this.gl.vertexAttribPointer(this.locations.position!, 2, this.gl.FLOAT, false, 0, 0);\r\n\r\n    this.gl.enableVertexAttribArray(this.locations.texcoord!);\r\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.buffers.texcoord!);\r\n    this.gl.vertexAttribPointer(this.locations.texcoord!, 2, this.gl.FLOAT, false, 0, 0);\r\n\r\n    // Set uniforms\r\n    this.gl.uniform2f(this.locations.resolution!, this.gl.canvas.width, this.gl.canvas.height);\r\n    this.gl.uniform1i(this.locations.image!, 0); // Use texture unit 0\r\n\r\n    // Setup blending\r\n    this.gl.enable(this.gl.BLEND);\r\n    this.gl.blendFunc(this.gl.ONE, this.gl.ONE);\r\n\r\n    // Draw\r\n    this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);\r\n\r\n    // Clean up\r\n    this.gl.disableVertexAttribArray(this.locations.position!);\r\n    this.gl.disableVertexAttribArray(this.locations.texcoord!);\r\n    this.gl.disable(this.gl.BLEND);\r\n  }\r\n\r\n  dispose(): void {\r\n    if (this.program) {\r\n      this.gl.deleteProgram(this.program);\r\n      this.program = null;\r\n    }\r\n\r\n    if (this.buffers.position) {\r\n      this.gl.deleteBuffer(this.buffers.position);\r\n      this.buffers.position = null;\r\n    }\r\n\r\n    if (this.buffers.texcoord) {\r\n      this.gl.deleteBuffer(this.buffers.texcoord);\r\n      this.buffers.texcoord = null;\r\n    }\r\n\r\n    if (this.texture) {\r\n      this.gl.deleteTexture(this.texture);\r\n      this.texture = null;\r\n    }\r\n  }\r\n}\r\n","import * as THREE from 'three';\r\nimport type { MapboxInstance } from '../../../react-maplibre/types/lib.js';\r\nimport CameraSync from '../../lib/bloom-effect/CameraSync.js';\r\n\r\nexport class CanvasManager {\r\n  public _scene: THREE.Scene;\r\n  public _camera: THREE.PerspectiveCamera;\r\n  public _renderer: THREE.WebGLRenderer;\r\n  public _group: THREE.Group;\r\n  public _light: THREE.AmbientLight;\r\n\r\n  get scene(): THREE.Scene {\r\n    return this._scene;\r\n  }\r\n\r\n  get camera(): THREE.PerspectiveCamera {\r\n    return this._camera;\r\n  }\r\n\r\n  get renderer(): THREE.WebGLRenderer {\r\n    return this._renderer;\r\n  }\r\n\r\n  get group(): THREE.Group {\r\n    return this._group;\r\n  }\r\n\r\n  get light(): THREE.AmbientLight {\r\n    return this._light;\r\n  }\r\n\r\n  constructor(map: MapboxInstance, container: HTMLCanvasElement) {\r\n    const w = container.clientWidth;\r\n    const h = container.clientHeight;\r\n    if (Object.getOwnPropertyDescriptor(map, 'version') === undefined) {\r\n      Object.defineProperty(map, 'version', { get: function () { return \"1.0\"; } });\r\n    }\r\n\r\n    // Initialize renderer\r\n    const renderer = new THREE.WebGLRenderer({\r\n      alpha: true,\r\n      antialias: true,\r\n      canvas: container,\r\n    });\r\n\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    renderer.shadowMap.enabled = true;\r\n    renderer.autoClear = false;\r\n    renderer.toneMapping = THREE.ReinhardToneMapping;\r\n    renderer.setClearAlpha(0.0);\r\n\r\n    // Initialize camera and scene\r\n    const camera = new THREE.PerspectiveCamera(map.transform.fov, w / h, 0.1, 1e21);\r\n    const scene = new THREE.Scene();\r\n    const group = new THREE.Group();\r\n    const light = new THREE.AmbientLight(0xcccccc);\r\n\r\n    scene.add(group);\r\n    scene.add(light);\r\n\r\n    // Camera sync\r\n    new CameraSync(map, camera, group);\r\n\r\n    this._scene = scene;\r\n    this._camera = camera;\r\n    this._renderer = renderer;\r\n    this._group = group;\r\n    this._light = light;\r\n  }\r\n\r\n  render(): void {\r\n    if (!this._scene || !this._camera || !this._renderer || !this._group) return;\r\n\r\n    const now = performance.now() * 0.001;\r\n\r\n    // Update animated materials\r\n    this._updateAnimatedMaterials(now);\r\n\r\n    // Reset Three.js renderer state before WebGL operations\r\n    this._renderer.resetState();\r\n\r\n    // Render Three.js scene to ensure depth buffer is populated (if needed)\r\n    this._renderer.render(this._scene, this._camera);\r\n  }\r\n\r\n  resize(width: number, height: number): void {\r\n    if (!this._camera || !this._renderer) return;\r\n\r\n    this._camera.aspect = width / height;\r\n    this._camera.updateProjectionMatrix();\r\n    this._renderer.setSize(width, height);\r\n  }\r\n\r\n  dispose(): void {\r\n    if (this._group) {\r\n      this._group.clear();\r\n    }\r\n\r\n    if (this._scene) {\r\n      this._scene.clear();\r\n    }\r\n\r\n    if (this._camera) {\r\n      this._camera.clear();\r\n    }\r\n\r\n    if (this._renderer) {\r\n      this._renderer.dispose();\r\n    }\r\n  }\r\n\r\n  private _updateAnimatedMaterials(time: number): void {\r\n    if (!this._group) return;\r\n\r\n    this._group.traverse((obj: any) => {\r\n      if (obj.material && obj.material.time !== undefined) {\r\n        obj.material.time = time;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import * as THREE from 'three';\nimport utils from './Utils';\nimport ThreeboxConstants from './constants';\nimport type { MapboxInstance } from '../../../react-maplibre/types/lib';\n\ntype CameraSyncState = {\n  translateCenter: THREE.Matrix4;\n  worldSizeRatio: number;\n  worldSize: number;\n}\n\nclass CameraSync {\n  public map: MapboxInstance;\n  public camera: THREE.PerspectiveCamera | THREE.OrthographicCamera;\n  public active: boolean;\n  public world: THREE.Group;\n  public state: CameraSyncState;\n  public halfFov?: number;\n  public cameraToCenterDistance?: number;\n  public acuteAngle?: number;\n  public cameraTranslateZ?: THREE.Matrix4;\n\n  constructor(map: MapboxInstance, camera: THREE.PerspectiveCamera | THREE.OrthographicCamera, world?: THREE.Group) {\n    this.map = map;\n    this.camera = camera;\n    this.active = true;\n\n    this.camera.matrixAutoUpdate = false; // We're in charge of the camera now!\n\n    // Postion and configure the world group so we can scale it appropriately when the camera zooms\n    this.world = world || new THREE.Group();\n    this.world.position.x = this.world.position.y = ThreeboxConstants.WORLD_SIZE / 2;\n    this.world.matrixAutoUpdate = false;\n\n    // set up basic camera state\n    this.state = {\n      translateCenter: new THREE.Matrix4().makeTranslation(\n        ThreeboxConstants.WORLD_SIZE / 2,\n        -ThreeboxConstants.WORLD_SIZE / 2,\n        0,\n      ),\n      worldSizeRatio: ThreeboxConstants.TILE_SIZE / ThreeboxConstants.WORLD_SIZE,\n      worldSize: ThreeboxConstants.TILE_SIZE * this.map.transform.scale,\n    };\n\n    // Listen for move events from the map and update the Three.js camera\n    const _this = this; // keep the function on _this\n    this.map\n      .on('move', function () {\n        _this.updateCamera();\n      })\n      .on('resize', function () {\n        _this.setupCamera();\n      });\n\n    this.setupCamera();\n  }\n\n  public setupCamera(): void {\n    const t = this.map.transform;\n    if (this.camera instanceof THREE.PerspectiveCamera) {\n      this.camera.aspect = t.width / t.height; //bug fixed, if aspect is not reset raycast will fail on map resize\n    }\n    this.halfFov = t._fov / 2;\n    this.cameraToCenterDistance = (0.5 / Math.tan(this.halfFov)) * t.height;\n    const maxPitch = (t._maxPitch * Math.PI) / 180;\n    this.acuteAngle = Math.PI / 2 - maxPitch;\n    this.updateCamera();\n  }\n\n  public updateCamera(ev?: any): void {\n    if (!this.camera) {\n      console.log('nocamera');\n      return;\n    }\n\n    const t = this.map.transform;\n    if (this.camera instanceof THREE.PerspectiveCamera) {\n      this.camera.aspect = t.width / t.height; //bug fixed, if aspect is not reset raycast will fail on map resize\n    }\n    const offset = t.centerOffset || new THREE.Vector3(); //{ x: t.width / 2, y: t.height / 2 };\n    let farZ = 0;\n    let furthestDistance = 0;\n    this.halfFov = t._fov / 2;\n    const groundAngle = Math.PI / 2 + t._pitch;\n    const pitchAngle = Math.cos(Math.PI / 2 - t._pitch); //pitch seems to influence heavily the depth calculation and cannot be more than 60 = PI/3 < v1 and 85 > v2\n    this.cameraToCenterDistance = (0.5 / Math.tan(this.halfFov)) * t.height;\n    let pixelsPerMeter = 1;\n    const worldSize = this.worldSize();\n\n    var versionParts = this.map.version.split('.');\n    var majorVersion = parseInt(versionParts[0]);\n    if (majorVersion >= 2.0) {\n      // mapbox version >= 2.0\n      pixelsPerMeter = this.mercatorZfromAltitude(1, t.center.lat) * worldSize;\n      const fovAboveCenter = t._fov * (0.5 + t.centerOffset.y / t.height);\n\n      // Adjust distance to MSL by the minimum possible elevation visible on screen,\n      // this way the far plane is pushed further in the case of negative elevation.\n      const minElevationInPixels = (t as any).elevation ? (t as any).elevation.getMinElevationBelowMSL() * pixelsPerMeter : 0;\n      const cameraToSeaLevelDistance = ((t as any)._camera.position[2] * worldSize - minElevationInPixels) / Math.cos(t._pitch);\n      const topHalfSurfaceDistance =\n        (Math.sin(fovAboveCenter) * cameraToSeaLevelDistance) /\n        Math.sin(utils.clamp(Math.PI - groundAngle - fovAboveCenter, 0.01, Math.PI - 0.01));\n\n      // Calculate z distance of the farthest fragment that should be rendered.\n      furthestDistance = pitchAngle * topHalfSurfaceDistance + cameraToSeaLevelDistance;\n\n      // Add a bit extra to avoid precision problems when a fragment's distance is exactly `furthestDistance`\n      const horizonDistance = cameraToSeaLevelDistance * (1 / (t as any)._horizonShift);\n      farZ = Math.min(furthestDistance * 1.01, horizonDistance);\n    } else {\n      // mapbox version < 2.0 or azure maps\n      // Furthest distance optimized by @jscastro76\n      const topHalfSurfaceDistance =\n        (Math.sin(this.halfFov) * this.cameraToCenterDistance) / Math.sin(Math.PI - groundAngle - this.halfFov);\n\n      // Calculate z distance of the farthest fragment that should be rendered.\n      furthestDistance = pitchAngle * topHalfSurfaceDistance + this.cameraToCenterDistance;\n\n      // Add a bit extra to avoid precision problems when a fragment's distance is exactly `furthestDistance`\n      farZ = furthestDistance * 1.01;\n    }\n    this.cameraTranslateZ = new THREE.Matrix4().makeTranslation(0, 0, this.cameraToCenterDistance);\n\n    // someday @ansis set further near plane to fix precision for deckgl,so we should fix it to use mapbox-gl v1.3+ correctly\n    // https://github.com/mapbox/mapbox-gl-js/commit/5cf6e5f523611bea61dae155db19a7cb19eb825c#diff-5dddfe9d7b5b4413ee54284bc1f7966d\n    const nz = t.height / 50; //min near z as coded by @ansis\n    const nearZ = Math.max(nz * pitchAngle, nz); //on changes in the pitch nz could be too low\n\n    const h = t.height;\n    const w = t.width;\n    if (this.camera instanceof THREE.OrthographicCamera) {\n      this.camera.projectionMatrix = utils.makeOrthographicMatrix(w / -2, w / 2, h / 2, h / -2, nearZ, farZ);\n    } else {\n      this.camera.projectionMatrix = utils.makePerspectiveMatrix(t._fov, w / h, nearZ, farZ);\n    }\n    this.camera.projectionMatrix.elements[8] = (-offset.x * 2) / t.width;\n    this.camera.projectionMatrix.elements[9] = (offset.y * 2) / t.height;\n\n    // Unlike the Mapbox GL JS camera, separate camera translation and rotation out into its world matrix\n    // If this is applied directly to the projection matrix, it will work OK but break raycasting\n    let cameraWorldMatrix = this.calcCameraMatrix(t._pitch, t.angle);\n    // When terrain layers are included, height of 3D layers must be modified from t_camera.z * worldSize\n    if ((t as any).elevation) cameraWorldMatrix.elements[14] = (t as any)._camera.position[2] * worldSize;\n    //this.camera.matrixWorld.elements is equivalent to t._camera._transform\n    this.camera.matrixWorld.copy(cameraWorldMatrix);\n\n    let zoomPow = t.scale * this.state.worldSizeRatio;\n    // Handle scaling and translation of objects in the map in the world's matrix transform, not the camera\n    let scale = new THREE.Matrix4();\n    let translateMap = new THREE.Matrix4();\n    let rotateMap = new THREE.Matrix4();\n\n    scale.makeScale(zoomPow, zoomPow, zoomPow);\n\n    let x = (t as any).x || t.point.x;\n    let y = (t as any).y || t.point.y;\n    translateMap.makeTranslation(-x, y, 0);\n    rotateMap.makeRotationZ(Math.PI);\n\n    this.world.matrix = new THREE.Matrix4()\n      .premultiply(rotateMap)\n      .premultiply(this.state.translateCenter)\n      .premultiply(scale)\n      .premultiply(translateMap);\n\n    // utils.prettyPrintMatrix(this.camera.projectionMatrix.elements);\n    this.map.fire('CameraSynced', {\n      detail: {\n        nearZ: nearZ,\n        farZ: farZ,\n        pitch: t._pitch,\n        angle: t.angle,\n        furthestDistance: furthestDistance,\n        cameraToCenterDistance: this.cameraToCenterDistance,\n        t: this.map.transform,\n        tbProjMatrix: this.camera.projectionMatrix.elements,\n        tbWorldMatrix: this.world.matrix.elements,\n        cameraSyn: CameraSync,\n      },\n    });\n  }\n\n  public worldSize(): number {\n    let t = this.map.transform;\n    return t.tileSize * t.scale;\n  }\n\n  public worldSizeFromZoom(): number {\n    let t = this.map.transform;\n    return Math.pow(2.0, t.zoom) * t.tileSize;\n  }\n\n  public mercatorZfromAltitude(altitude: number, lat: number): number {\n    return altitude / this.circumferenceAtLatitude(lat);\n  }\n\n  public mercatorZfromZoom(): number {\n    return this.cameraToCenterDistance! / this.worldSizeFromZoom();\n  }\n\n  public circumferenceAtLatitude(latitude: number): number {\n    return ThreeboxConstants.EARTH_CIRCUMFERENCE * Math.cos((latitude * Math.PI) / 180);\n  }\n\n  public calcCameraMatrix(pitch?: number, angle?: number, trz?: THREE.Matrix4): THREE.Matrix4 {\n    const t = this.map.transform;\n    const _pitch = pitch === undefined ? t._pitch : pitch;\n    const _angle = angle === undefined ? t.angle : angle;\n    const _trz = trz === undefined ? this.cameraTranslateZ! : trz;\n\n    return new THREE.Matrix4()\n      .premultiply(_trz)\n      .premultiply(new THREE.Matrix4().makeRotationX(_pitch))\n      .premultiply(new THREE.Matrix4().makeRotationZ(_angle));\n  }\n\n  public updateCameraState(): number[] | undefined {\n    let t = this.map.transform;\n    if (!t.height) return;\n\n    // Set camera orientation and move it to a proper distance from the map\n    //t._camera.setPitchBearing(t._pitch, t.angle);\n\n    const dir = (t as any)._camera.forward();\n    const distance = (t as any).cameraToCenterDistance;\n    const center = t.point;\n\n    // Use camera zoom (if terrain is enabled) to maintain constant altitude to sea level\n    const zoom = (t as any)._cameraZoom ? (t as any)._cameraZoom : (t as any)._zoom;\n    const altitude = this.mercatorZfromZoom();\n    const height = altitude - this.mercatorZfromAltitude((t as any)._centerAltitude, t.center.lat);\n\n    // simplified version of: this._worldSizeFromZoom(this._zoomFromMercatorZ(height))\n    const updatedWorldSize = (t as any).cameraToCenterDistance / height;\n    return [\n      center.x / this.worldSize() - (dir[0] * distance) / updatedWorldSize,\n      center.y / this.worldSize() - (dir[1] * distance) / updatedWorldSize,\n      this.mercatorZfromAltitude((t as any)._centerAltitude, (t as any)._center.lat) + (-dir[2] * distance) / updatedWorldSize,\n    ];\n  }\n\n  public getWorldToCamera(worldSize: number, pixelsPerMeter: number): THREE.Matrix4 {\n    // transformation chain from world space to camera space:\n    // 1. Height value (z) of renderables is in meters. Scale z coordinate by pixelsPerMeter\n    // 2. Transform from pixel coordinates to camera space with cameraMatrix^-1\n    // 3. flip Y if required\n\n    // worldToCamera: flip * cam^-1 * zScale\n    // cameraToWorld: (flip * cam^-1 * zScale)^-1 => (zScale^-1 * cam * flip^-1)\n    let t = this.map.transform;\n    const matrix = new THREE.Matrix4();\n    const matrixT = new THREE.Matrix4();\n\n    // Compute inverse of camera matrix and post-multiply negated translation\n    const o = (t as any)._camera._orientation;\n    const p = (t as any)._camera.position;\n    const invPosition = new THREE.Vector3(p[0], p[1], p[2]);\n\n    const quat = new THREE.Quaternion();\n    quat.set(o[0], o[1], o[2], o[3]);\n    const invOrientation = quat.conjugate();\n    invPosition.multiplyScalar(-worldSize);\n\n    matrixT.makeTranslation(invPosition.x, invPosition.y, invPosition.z);\n    matrix.makeRotationFromQuaternion(invOrientation).premultiply(matrixT);\n    //this would make the matrix exact to getWorldToCamera but breaks\n    //this.translate(matrix.elements, matrix.elements, invPosition);\n\n    // Pre-multiply y (2nd row)\n    matrix.elements[1] *= -1.0;\n    matrix.elements[5] *= -1.0;\n    matrix.elements[9] *= -1.0;\n    matrix.elements[13] *= -1.0;\n\n    // Post-multiply z (3rd column)\n    matrix.elements[8] *= pixelsPerMeter;\n    matrix.elements[9] *= pixelsPerMeter;\n    matrix.elements[10] *= pixelsPerMeter;\n    matrix.elements[11] *= pixelsPerMeter;\n    //console.log(matrix.elements);\n    return matrix;\n  }\n\n  public translate(out: number[], a: number[], v: number[] | THREE.Vector3): number[] {\n    let x = Array.isArray(v) ? v[0] : v.x,\n      y = Array.isArray(v) ? v[1] : v.y,\n      z = Array.isArray(v) ? v[2] : v.z;\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n    if (a === out) {\n      out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n      out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n      out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n      out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n      a00 = a[0];\n      a01 = a[1];\n      a02 = a[2];\n      a03 = a[3];\n      a10 = a[4];\n      a11 = a[5];\n      a12 = a[6];\n      a13 = a[7];\n      a20 = a[8];\n      a21 = a[9];\n      a22 = a[10];\n      a23 = a[11];\n      out[0] = a00;\n      out[1] = a01;\n      out[2] = a02;\n      out[3] = a03;\n      out[4] = a10;\n      out[5] = a11;\n      out[6] = a12;\n      out[7] = a13;\n      out[8] = a20;\n      out[9] = a21;\n      out[10] = a22;\n      out[11] = a23;\n      out[12] = a00 * x + a10 * y + a20 * z + a[12];\n      out[13] = a01 * x + a11 * y + a21 * z + a[13];\n      out[14] = a02 * x + a12 * y + a22 * z + a[14];\n      out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n    return out;\n  }\n}\n\nexport default CameraSync;\n","//@flow\n// var THREE = require(\"../three.js\");\n// var Constants = require(\"./constants.js\");\n// var validate = require(\"./validate.js\");\nimport * as THREE from \"three\";\nimport Constants from \"./constants.js\";\n\nvar utils = {\n    prettyPrintMatrix: function (uglymatrix) {\n        for (var s = 0; s < 4; s++) {\n            var quartet = [\n                uglymatrix[s],\n                uglymatrix[s + 4],\n                uglymatrix[s + 8],\n                uglymatrix[s + 12],\n            ];\n            console.log(\n                quartet.map(function (num) {\n                    return num.toFixed(4);\n                })\n            );\n        }\n    },\n\n    makePerspectiveMatrix: function (fovy, aspect, near, far) {\n        var out = new THREE.Matrix4();\n        var f = 1.0 / Math.tan(fovy / 2),\n            nf = 1 / (near - far);\n\n        var newMatrix = [\n            f / aspect,\n            0,\n            0,\n            0,\n            0,\n            f,\n            0,\n            0,\n            0,\n            0,\n            (far + near) * nf,\n            -1,\n            0,\n            0,\n            2 * far * near * nf,\n            0,\n        ];\n\n        out.elements = newMatrix;\n        return out;\n    },\n\n    //[jscastro] new orthographic matrix calculations https://en.wikipedia.org/wiki/Orthographic_projection and validated with https://bit.ly/3rPvB9Y\n    makeOrthographicMatrix: function (left, right, top, bottom, near, far) {\n        var out = new THREE.Matrix4();\n\n        const w = 1.0 / (right - left);\n        const h = 1.0 / (top - bottom);\n        const p = 1.0 / (far - near);\n\n        const x = (right + left) * w;\n        const y = (top + bottom) * h;\n        const z = near * p;\n\n        var newMatrix = [\n            2 * w,\n            0,\n            0,\n            0,\n            0,\n            2 * h,\n            0,\n            0,\n            0,\n            0,\n            -1 * p,\n            0,\n            -x,\n            -y,\n            -z,\n            1,\n        ];\n\n        out.elements = newMatrix;\n        return out;\n    },\n\n    //gimme radians\n    radify: function (deg) {\n        function convert(degrees) {\n            degrees = degrees || 0;\n            return (Math.PI * 2 * degrees) / 360;\n        }\n\n        if (typeof deg === \"object\") {\n            //if [x,y,z] array of rotations\n            if (deg.length > 0) {\n                return deg.map(function (degree) {\n                    return convert(degree);\n                });\n            }\n\n            // if {x: y: z:} rotation object\n            else {\n                return [convert(deg.x), convert(deg.y), convert(deg.z)];\n            }\n        }\n\n        //if just a number\n        else return convert(deg);\n    },\n\n    //gimme degrees\n    degreeify: function (rad) {\n        function convert(radians) {\n            radians = radians || 0;\n            return (radians * 360) / (Math.PI * 2);\n        }\n\n        if (typeof rad === \"object\") {\n            return [convert(rad.x), convert(rad.y), convert(rad.z)];\n        } else return convert(rad);\n    },\n\n    projectToWorld: function (coords) {\n        // Spherical mercator forward projection, re-scaling to WORLD_SIZE\n\n        var projected = [\n            -Constants.MERCATOR_A *\n                Constants.DEG2RAD *\n                coords[0] *\n                Constants.PROJECTION_WORLD_SIZE,\n            -Constants.MERCATOR_A *\n                Math.log(\n                    Math.tan(\n                        Math.PI * 0.25 + 0.5 * Constants.DEG2RAD * coords[1]\n                    )\n                ) *\n                Constants.PROJECTION_WORLD_SIZE,\n        ];\n\n        //z dimension, defaulting to 0 if not provided\n\n        if (!coords[2]) projected.push(0);\n        else {\n            var pixelsPerMeter = this.projectedUnitsPerMeter(coords[1]);\n            projected.push(coords[2] * pixelsPerMeter);\n        }\n\n        var result = new THREE.Vector3(\n            projected[0],\n            projected[1],\n            projected[2]\n        );\n\n        return result;\n    },\n\n    projectedUnitsPerMeter: function (latitude) {\n        return Math.abs(\n            Constants.WORLD_SIZE /\n                Math.cos(Constants.DEG2RAD * latitude) /\n                Constants.EARTH_CIRCUMFERENCE\n        );\n    },\n\n    _circumferenceAtLatitude: function (latitude) {\n        return (\n            Constants.EARTH_CIRCUMFERENCE * Math.cos((latitude * Math.PI) / 180)\n        );\n    },\n\n    mercatorZfromAltitude: function (altitude, lat) {\n        return altitude / this._circumferenceAtLatitude(lat);\n    },\n\n    _scaleVerticesToMeters: function (centerLatLng, vertices) {\n        var pixelsPerMeter = this.projectedUnitsPerMeter(centerLatLng[1]);\n        var centerProjected = this.projectToWorld(centerLatLng);\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertices[i].multiplyScalar(pixelsPerMeter);\n        }\n\n        return vertices;\n    },\n\n    projectToScreen: function (coords) {\n        console.log(\n            \"WARNING: Projecting to screen coordinates is not yet implemented\"\n        );\n    },\n\n    unprojectFromScreen: function (pixel) {\n        console.log(\"WARNING: unproject is not yet implemented\");\n    },\n\n    //world units to lnglat\n    unprojectFromWorld: function (worldUnits) {\n        var unprojected = [\n            -worldUnits.x /\n                (Constants.MERCATOR_A *\n                    Constants.DEG2RAD *\n                    Constants.PROJECTION_WORLD_SIZE),\n            (2 *\n                (Math.atan(\n                    Math.exp(\n                        worldUnits.y /\n                            (Constants.PROJECTION_WORLD_SIZE *\n                                -Constants.MERCATOR_A)\n                    )\n                ) -\n                    Math.PI / 4)) /\n                Constants.DEG2RAD,\n        ];\n\n        var pixelsPerMeter = this.projectedUnitsPerMeter(unprojected[1]);\n\n        //z dimension\n        var height = worldUnits.z || 0;\n        unprojected.push(height / pixelsPerMeter);\n\n        return unprojected;\n    },\n\n    toScreenPosition: function (obj, camera) {\n        var vector = new THREE.Vector3();\n\n        var widthHalf = 0.5 * renderer.context.canvas.width;\n        var heightHalf = 0.5 * renderer.context.canvas.height;\n\n        obj.updateMatrixWorld();\n        vector.setFromMatrixPosition(obj.matrixWorld);\n        vector.project(camera);\n\n        vector.x = vector.x * widthHalf + widthHalf;\n        vector.y = -(vector.y * heightHalf) + heightHalf;\n\n        return {\n            x: vector.x,\n            y: vector.y,\n        };\n    },\n\n    //get the center point of a feature\n    getFeatureCenter: function getFeatureCenter(feature, model, level) {\n        let center = [];\n        let latitude = 0;\n        let longitude = 0;\n        let height = 0;\n        //deep copy to avoid modifying the original array\n        let coordinates = [...feature.geometry.coordinates[0]];\n        if (feature.geometry.type === \"Point\") {\n            center = [...coordinates[0]]; //deep copy\n        } else {\n            //features in mapbox repeat the first coordinates at the end. We remove it.\n            if (feature.geometry.type === \"MultiPolygon\")\n                coordinates = coordinates[0];\n            coordinates.splice(-1, 1);\n            coordinates.forEach(function (c) {\n                latitude += c[0];\n                longitude += c[1];\n            });\n            center = [\n                latitude / coordinates.length,\n                longitude / coordinates.length,\n            ];\n        }\n        height = this.getObjectHeightOnFloor(feature, model, level);\n\n        center.length < 3 ? center.push(height) : (center[2] = height);\n\n        return center;\n    },\n\n    getObjectHeightOnFloor: function (\n        feature,\n        obj,\n        level = feature.properties.level || 0\n    ) {\n        let floorHeightMin = level * (feature.properties.levelHeight || 0);\n        //object height is modelSize.z + base_height or min_height configured for this object\n        let base =\n            feature.properties.base_height ||\n            feature.properties.min_height ||\n            0;\n        //let height = ((obj && obj.model) ? obj.modelSize.z : (feature.properties.height - base));\n        let height = obj && obj.model ? 0 : feature.properties.height - base;\n        let objectHeight = height + base;\n        let modelHeightFloor = floorHeightMin + objectHeight;\n        return modelHeightFloor;\n    },\n\n    _flipMaterialSides: function (obj) {},\n\n    // to improve precision, normalize a series of vector3's to their collective center, and move the resultant mesh to that center\n    normalizeVertices(vertices) {\n        let geometry = new THREE.BufferGeometry();\n        let positions = [];\n\n        for (var j = 0; j < vertices.length; j++) {\n            let p = vertices[j];\n            positions.push(p.x, p.y, p.z);\n            positions.push(p.x, p.y, p.z);\n        }\n        geometry.setAttribute(\n            \"position\",\n            new THREE.BufferAttribute(new Float32Array(positions), 3)\n        );\n\n        geometry.computeBoundingSphere();\n        var center = geometry.boundingSphere.center;\n        var scaled = vertices.map(function (v3) {\n            var normalized = v3.sub(center);\n            return normalized;\n        });\n\n        return { vertices: scaled, position: center };\n    },\n\n    //flatten an array of Vector3's into a shallow array of values in x-y-z order, for bufferGeometry\n    flattenVectors(vectors) {\n        var flattenedArray = [];\n        for (let vertex of vectors) {\n            flattenedArray.push(vertex.x, vertex.y, vertex.z);\n        }\n        return flattenedArray;\n    },\n\n    //convert a line/polygon to Vector3's\n\n    lnglatsToWorld: function (coords) {\n        var vector3 = coords.map(function (pt) {\n            var p = utils.projectToWorld(pt);\n            var v3 = new THREE.Vector3(p.x, p.y, p.z);\n            return v3;\n        });\n\n        return vector3;\n    },\n\n    extend: function (original, addition) {\n        for (let key in addition) original[key] = addition[key];\n    },\n\n    clone: function (original) {\n        var clone = {};\n        for (let key in original) clone[key] = original[key];\n        return clone;\n    },\n\n    clamp: function (n, min, max) {\n        return Math.min(max, Math.max(min, n));\n    },\n\n    // retrieve object parameters from an options object\n    types: {\n        rotation: function (r, currentRotation) {\n            //[jscastro] rotation default 0\n            if (!r) {\n                r = 0;\n            }\n\n            // if number provided, rotate only in Z by that amount\n            if (typeof r === \"number\") r = { z: r };\n\n            var degrees = this.applyDefault([r.x, r.y, r.z], currentRotation);\n            var radians = utils.radify(degrees);\n            return radians;\n        },\n\n        scale: function (s, currentScale) {\n            //[jscastro] scale default 1\n            if (!s) {\n                s = 1;\n            }\n            if (typeof s === \"number\") return (s = [s, s, s]);\n            else return this.applyDefault([s.x, s.y, s.z], currentScale);\n        },\n\n        applyDefault: function (array, current) {\n            var output = array.map(function (item, index) {\n                item = item || current[index];\n                return item;\n            });\n\n            return output;\n        },\n    },\n\n    toDecimal: function (n, d) {\n        return Number(n.toFixed(d));\n    },\n\n    equal: function (obj1, obj2) {\n        const keys1 = Object.keys(obj1);\n        const keys2 = Object.keys(obj2);\n\n        if (keys1.length !== keys2.length) {\n            return false;\n        }\n        if (keys1.length == 0 && keys2.length == 0 && keys1 !== keys2) {\n            return false;\n        }\n\n        for (const key of keys1) {\n            const val1 = obj1[key];\n            const val2 = obj2[key];\n            const areObjects = this.isObject(val1) && this.isObject(val2);\n            if (\n                (areObjects && !equal(val1, val2)) ||\n                (!areObjects && val1 !== val2)\n            ) {\n                return false;\n            }\n        }\n\n        return true;\n    },\n\n    isObject: function (object) {\n        return object != null && typeof object === \"object\";\n    },\n\n    curveToLine: (curve, params) => {\n        let { width, color } = params;\n        let geometry = new THREE.BufferGeometry().setFromPoints(\n            curve.getPoints(100)\n        );\n\n        let material = new THREE.LineBasicMaterial({\n            color: color,\n            linewidth: width,\n        });\n\n        let line = new THREE.Line(geometry, material);\n\n        return line;\n    },\n\n    curvesToLines: (curves) => {\n        var colors = [0xff0000, 0x1eff00, 0x2600ff];\n        var lines = curves.map((curve, i) => {\n            let params = {\n                width: 3,\n                color: colors[i] || \"purple\",\n            };\n            let curveline = curveToLine(curve, params);\n\n            return curveline;\n        });\n        return lines;\n    },\n\n    _validate: function (userInputs, defaults) {\n        userInputs = userInputs || {};\n        var validatedOutput = {};\n        utils.extend(validatedOutput, userInputs);\n\n        for (let key of Object.keys(defaults)) {\n            if (userInputs[key] === undefined) {\n                //make sure required params are present\n                if (defaults[key] === null) {\n                    console.error(key + \" is required\");\n                    return;\n                } else validatedOutput[key] = defaults[key];\n            } else validatedOutput[key] = userInputs[key];\n        }\n\n        return validatedOutput;\n    },\n    // Validator: new validate(),\n    exposedMethods: [\n        \"projectToWorld\",\n        \"projectedUnitsPerMeter\",\n        \"extend\",\n        \"unprojectFromWorld\",\n    ],\n};\n\nexport default utils;\n","//@flow\nconst WORLD_SIZE = 1024000; //TILE_SIZE * 2000\nconst MERCATOR_A = 6378137.0; // 900913 projection property. (Deprecated) Replaced by EARTH_RADIUS\nconst FOV_ORTHO = (0.1 / 180) * Math.PI; //Mapbox doesn't accept 0 as FOV\nconst FOV = Math.atan(3 / 4); //from Mapbox https://github.com/mapbox/mapbox-gl-js/blob/main/src/geo/transform.js#L93\nconst EARTH_RADIUS = 6371008.8; //from Mapbox  https://github.com/mapbox/mapbox-gl-js/blob/0063cbd10a97218fb6a0f64c99bf18609b918f4c/src/geo/lng_lat.js#L11\nconst EARTH_CIRCUMFERENCE_EQUATOR = 40075017; //from Mapbox https://github.com/mapbox/mapbox-gl-js/blob/0063cbd10a97218fb6a0f64c99bf18609b918f4c/src/geo/lng_lat.js#L117\n\nexport default {\n    WORLD_SIZE,\n    PROJECTION_WORLD_SIZE: WORLD_SIZE / (EARTH_RADIUS * Math.PI * 2),\n    MERCATOR_A: EARTH_RADIUS,\n    DEG2RAD: Math.PI / 180,\n    RAD2DEG: 180 / Math.PI,\n    EARTH_RADIUS,\n    EARTH_CIRCUMFERENCE: 2 * Math.PI * EARTH_RADIUS, //40075000, // In meters\n    EARTH_CIRCUMFERENCE_EQUATOR,\n    FOV_ORTHO, // closest to 0\n    FOV, // Math.atan(3/4) radians. If this value is changed, FOV_DEGREES must be calculated\n    FOV_DEGREES: (FOV * 180) / Math.PI, // Math.atan(3/4) in degrees\n    TILE_SIZE: 512,\n};\n","import * as THREE from 'three';\r\nimport { EffectComposer } from 'three/addons/postprocessing/EffectComposer.js';\r\nimport { RenderPass } from 'three/addons/postprocessing/RenderPass.js';\r\nimport { OutputPass } from 'three/addons/postprocessing/OutputPass.js';\r\nimport { UnrealBloomPass } from '../../lib/bloom-effect/postprocessing/UnrealBloomPass.js';\r\nimport { MixPass, MixPassMaterial } from '../objects/mix-pass/index.js';\r\nimport type { EffectCanvasParams } from '../../types/common.js';\r\n\r\nexport class BloomRenderer {\r\n  private _composer: EffectComposer;\r\n  private _bloomComposer: EffectComposer;\r\n  private _bloomPass: UnrealBloomPass;\r\n  private _bloomLayer: THREE.Layers;\r\n  private _darkMaterial: THREE.MeshBasicMaterial;\r\n  private _materials: Record<string, THREE.Material | THREE.Material[]> = {};\r\n  private readonly bloomScene = 1; // Layer for bloom effect\r\n\r\n  constructor(\r\n    private _renderer: THREE.WebGLRenderer,\r\n    private _scene: THREE.Scene,\r\n    private _camera: THREE.PerspectiveCamera,\r\n  ) {\r\n    this._bloomLayer = new THREE.Layers();\r\n    this._bloomLayer.set(this.bloomScene);\r\n    this._darkMaterial = new THREE.MeshBasicMaterial({ color: 'black' });\r\n\r\n    const renderScene = new RenderPass(this._scene, this._camera);\r\n\r\n    const bloomPass = new UnrealBloomPass();\r\n    bloomPass.resolution = new THREE.Vector2();\r\n    bloomPass.strength = 0;\r\n    bloomPass.radius = 0;\r\n    bloomPass.threshold = 0;\r\n\r\n    const bloomComposer = new EffectComposer(this._renderer);\r\n    bloomComposer.renderToScreen = false;\r\n    bloomComposer.addPass(renderScene);\r\n    bloomComposer.addPass(bloomPass);\r\n\r\n    const mixPassMaterial = new MixPassMaterial();\r\n    mixPassMaterial.bloomTexture = bloomComposer.renderTarget2.texture;\r\n    const mixPass = new MixPass(mixPassMaterial);\r\n\r\n    const outputPass = new OutputPass();\r\n    const composer = new EffectComposer(this._renderer);\r\n    composer.addPass(renderScene);\r\n    composer.addPass(mixPass);\r\n    composer.addPass(outputPass);\r\n\r\n    this._composer = composer;\r\n    this._bloomComposer = bloomComposer;\r\n    this._bloomPass = bloomPass;\r\n  }\r\n\r\n  setResolution(width: number, height: number): void {\r\n    if (this._bloomPass) {\r\n      this._bloomPass.resolution = new THREE.Vector2(width, height);\r\n    }\r\n  }\r\n\r\n  setValues(effect: Partial<EffectCanvasParams>): void {\r\n    if (this._bloomPass && effect) {\r\n      this._bloomPass.strength = effect.strength || 0;\r\n      this._bloomPass.radius = effect.radius || 0;\r\n      this._bloomPass.threshold = effect.threshold || 0;\r\n    }\r\n  }\r\n\r\n  render(): void {\r\n    if (!this._bloomComposer || !this._composer) return;\r\n    this._scene.traverse(this._darkenNonBloomed.bind(this));\r\n    this._scene.traverse(this._restoreMaterial.bind(this));\r\n    \r\n    this._bloomComposer.render();\r\n    this._composer.render();\r\n  }\r\n\r\n  resize(width: number, height: number): void {\r\n    if (!this._bloomComposer || !this._composer) return;\r\n\r\n    this._composer.setSize(width, height);\r\n    this._bloomComposer.setSize(width, height);\r\n  }\r\n\r\n  enableBloom(object: THREE.Object3D): void {\r\n    object.layers.enable(this.bloomScene);\r\n  }\r\n\r\n  disableBloom(object: THREE.Object3D): void {\r\n    object.layers.disable(this.bloomScene);\r\n  }\r\n\r\n  dispose(): void {\r\n    if (this._bloomComposer) {\r\n      this._bloomComposer.dispose();\r\n    }\r\n\r\n    if (this._composer) {\r\n      this._composer.dispose();\r\n    }\r\n\r\n    this._materials = {};\r\n  }\r\n\r\n  private _darkenNonBloomed(obj: THREE.Object3D): void {\r\n    const mesh = obj as THREE.Mesh;\r\n    if (mesh.isMesh && !this._bloomLayer?.test(obj.layers) && this._darkMaterial) {\r\n      mesh.material = Array.isArray(mesh.material)\r\n        ? mesh.material.map(() => this._darkMaterial!)\r\n        : this._darkMaterial;\r\n      this._materials[obj.uuid] = mesh.material;\r\n    }\r\n  }\r\n\r\n  private _restoreMaterial(obj: THREE.Object3D): void {\r\n    const mesh = obj as THREE.Mesh;\r\n    if (this._materials[obj.uuid]) {\r\n      mesh.material = this._materials[obj.uuid];\r\n      delete this._materials[obj.uuid];\r\n    }\r\n  }\r\n}\r\n","import {\n\tAdditiveBlending,\n\tColor,\n\tHalfFloatType,\n\tMeshBasicMaterial,\n\tShaderMaterial,\n\tUniformsUtils,\n\tVector2,\n\tVector3,\n\tWebGLRenderTarget\n} from 'three';\nimport { Pass, FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass.js';\nimport { CopyShader } from 'three/examples/jsm/shaders/CopyShader.js';\nimport { LuminosityHighPassShader } from 'three/examples/jsm/shaders/LuminosityHighPassShader.js';\n\n/**\n * UnrealBloomPass is inspired by the bloom pass of Unreal Engine. It creates a\n * mip map chain of bloom textures and blurs them with different radii. Because\n * of the weighted combination of mips, and because larger blurs are done on\n * higher mips, this effect provides good quality and performance.\n *\n * Reference:\n * - https://docs.unrealengine.com/latest/INT/Engine/Rendering/PostProcessEffects/Bloom/\n */\nclass UnrealBloomPass extends Pass {\n\n\tconstructor( resolution, strength, radius, threshold ) {\n\n\t\tsuper();\n\n\t\tthis.strength = ( strength !== undefined ) ? strength : 1;\n\t\tthis.radius = radius;\n\t\tthis.threshold = threshold;\n\t\tthis.resolution = ( resolution !== undefined ) ? new Vector2( resolution.x, resolution.y ) : new Vector2( 256, 256 );\n\n\t\t// create color only once here, reuse it later inside the render function\n\t\tthis.clearColor = new Color( 1, 1, 1 );\n\n\t\t// render targets\n\t\tthis.renderTargetsHorizontal = [];\n\t\tthis.renderTargetsVertical = [];\n\t\tthis.nMips = 5;\n\t\tlet resx = Math.round( this.resolution.x / 2 );\n\t\tlet resy = Math.round( this.resolution.y / 2 );\n\n\t\tthis.renderTargetBright = new WebGLRenderTarget( resx, resy, { type: HalfFloatType } );\n\t\tthis.renderTargetBright.texture.name = 'UnrealBloomPass.bright';\n\t\tthis.renderTargetBright.texture.generateMipmaps = false;\n\n\t\tfor ( let i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tconst renderTargetHorizonal = new WebGLRenderTarget( resx, resy, { type: HalfFloatType } );\n\n\t\t\trenderTargetHorizonal.texture.name = 'UnrealBloomPass.h' + i;\n\t\t\trenderTargetHorizonal.texture.generateMipmaps = false;\n\n\t\t\tthis.renderTargetsHorizontal.push( renderTargetHorizonal );\n\n\t\t\tconst renderTargetVertical = new WebGLRenderTarget( resx, resy, { type: HalfFloatType } );\n\n\t\t\trenderTargetVertical.texture.name = 'UnrealBloomPass.v' + i;\n\t\t\trenderTargetVertical.texture.generateMipmaps = false;\n\n\t\t\tthis.renderTargetsVertical.push( renderTargetVertical );\n\n\t\t\tresx = Math.round( resx / 2 );\n\n\t\t\tresy = Math.round( resy / 2 );\n\n\t\t}\n\n\t\t// luminosity high pass material\n\n\t\tconst highPassShader = LuminosityHighPassShader;\n\t\tthis.highPassUniforms = UniformsUtils.clone( highPassShader.uniforms );\n\n\t\tthis.highPassUniforms[ 'luminosityThreshold' ].value = threshold;\n\t\tthis.highPassUniforms[ 'smoothWidth' ].value = 0.01;\n\n\t\tthis.materialHighPassFilter = new ShaderMaterial( {\n\t\t\tuniforms: this.highPassUniforms,\n\t\t\tvertexShader: highPassShader.vertexShader,\n\t\t\tfragmentShader: highPassShader.fragmentShader\n\t\t} );\n\n\t\t// gaussian blur materials\n\n\t\tthis.separableBlurMaterials = [];\n\t\tconst kernelSizeArray = [ 3, 5, 7, 9, 11 ];\n\t\t// const kernelSizeArray = [ 3, 4, 5, 6, 7 ];\n\t\tresx = Math.round( this.resolution.x / 2 );\n\t\tresy = Math.round( this.resolution.y / 2 );\n\n\t\tfor ( let i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.separableBlurMaterials.push( this.getSeperableBlurMaterial( kernelSizeArray[ i ] ) );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ 'invSize' ].value = new Vector2( 1 / resx, 1 / resy );\n\n\t\t\tresx = Math.round( resx / 2 );\n\n\t\t\tresy = Math.round( resy / 2 );\n\n\t\t}\n\n\t\t// composite material\n\n\t\tthis.compositeMaterial = this.getCompositeMaterial( this.nMips );\n\t\tthis.compositeMaterial.uniforms[ 'blurTexture1' ].value = this.renderTargetsVertical[ 0 ].texture;\n\t\tthis.compositeMaterial.uniforms[ 'blurTexture2' ].value = this.renderTargetsVertical[ 1 ].texture;\n\t\tthis.compositeMaterial.uniforms[ 'blurTexture3' ].value = this.renderTargetsVertical[ 2 ].texture;\n\t\tthis.compositeMaterial.uniforms[ 'blurTexture4' ].value = this.renderTargetsVertical[ 3 ].texture;\n\t\tthis.compositeMaterial.uniforms[ 'blurTexture5' ].value = this.renderTargetsVertical[ 4 ].texture;\n\t\tthis.compositeMaterial.uniforms[ 'bloomStrength' ].value = strength;\n\t\tthis.compositeMaterial.uniforms[ 'bloomRadius' ].value = 0.1;\n\n\t\tconst bloomFactors = [ 1.0, 0.8, 0.6, 0.4, 0.2 ];\n\t\tthis.compositeMaterial.uniforms[ 'bloomFactors' ].value = bloomFactors;\n\t\tthis.bloomTintColors = [ new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ) ];\n\t\tthis.compositeMaterial.uniforms[ 'bloomTintColors' ].value = this.bloomTintColors;\n\n\t\t// blend material\n\n\t\tconst copyShader = CopyShader;\n\n\t\tthis.copyUniforms = UniformsUtils.clone( copyShader.uniforms );\n\n\t\tthis.blendMaterial = new ShaderMaterial( {\n\t\t\tuniforms: this.copyUniforms,\n\t\t\tvertexShader: copyShader.vertexShader,\n\t\t\tfragmentShader: copyShader.fragmentShader,\n\t\t\tblending: AdditiveBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false,\n\t\t\ttransparent: true\n\t\t} );\n\n\t\tthis.enabled = true;\n\t\tthis.needsSwap = false;\n\n\t\tthis._oldClearColor = new Color();\n\t\tthis.oldClearAlpha = 1;\n\n\t\tthis.basic = new MeshBasicMaterial();\n\n\t\tthis.fsQuad = new FullScreenQuad( null );\n\n\t}\n\n\tdispose() {\n\n\t\tfor ( let i = 0; i < this.renderTargetsHorizontal.length; i ++ ) {\n\n\t\t\tthis.renderTargetsHorizontal[ i ].dispose();\n\n\t\t}\n\n\t\tfor ( let i = 0; i < this.renderTargetsVertical.length; i ++ ) {\n\n\t\t\tthis.renderTargetsVertical[ i ].dispose();\n\n\t\t}\n\n\t\tthis.renderTargetBright.dispose();\n\n\t\t//\n\n\t\tfor ( let i = 0; i < this.separableBlurMaterials.length; i ++ ) {\n\n\t\t\tthis.separableBlurMaterials[ i ].dispose();\n\n\t\t}\n\n\t\tthis.compositeMaterial.dispose();\n\t\tthis.blendMaterial.dispose();\n\t\tthis.basic.dispose();\n\n\t\t//\n\n\t\tthis.fsQuad.dispose();\n\n\t}\n\n\tsetSize( width, height ) {\n\n\t\tlet resx = Math.round( width / 2 );\n\t\tlet resy = Math.round( height / 2 );\n\n\t\tthis.renderTargetBright.setSize( resx, resy );\n\n\t\tfor ( let i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.renderTargetsHorizontal[ i ].setSize( resx, resy );\n\t\t\tthis.renderTargetsVertical[ i ].setSize( resx, resy );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ 'invSize' ].value = new Vector2( 1 / resx, 1 / resy );\n\n\t\t\tresx = Math.round( resx / 2 );\n\t\t\tresy = Math.round( resy / 2 );\n\n\t\t}\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer, deltaTime, maskActive ) {\n\t\trenderer.getClearColor( this._oldClearColor );\n\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\t\tconst oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\trenderer.setClearColor( this.clearColor, 0 );\n\n\t\tif ( maskActive ) renderer.state.buffers.stencil.setTest( false );\n\n\t\t// Render input to screen\n\t\tif ( this.renderToScreen ) {\n\n\t\t\tthis.fsQuad.material = this.basic;\n\t\t\tthis.basic.map = readBuffer.texture;\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\t// 1. Extract Bright Areas\n\n\t\tthis.highPassUniforms[ 'tDiffuse' ].value = readBuffer.texture;\n\t\tthis.highPassUniforms[ 'luminosityThreshold' ].value = this.threshold;\n\t\tthis.fsQuad.material = this.materialHighPassFilter;\n\n\t\trenderer.setRenderTarget( this.renderTargetBright );\n\t\trenderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t\t// 2. Blur All the mips progressively\n\n\t\tlet inputRenderTarget = this.renderTargetBright;\n\n\t\tfor ( let i = 0; i < this.nMips; i ++ ) {\n\n\t\t\tthis.fsQuad.material = this.separableBlurMaterials[ i ];\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ 'colorTexture' ].value = inputRenderTarget.texture;\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ 'direction' ].value = UnrealBloomPass.BlurDirectionX;\n\t\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ i ] );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ 'colorTexture' ].value = this.renderTargetsHorizontal[ i ].texture;\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ 'direction' ].value = UnrealBloomPass.BlurDirectionY;\n\t\t\trenderer.setRenderTarget( this.renderTargetsVertical[ i ] );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t\tinputRenderTarget = this.renderTargetsVertical[ i ];\n\n\t\t}\n\n\t\t// Composite All the mips\n\n\t\tthis.fsQuad.material = this.compositeMaterial;\n\t\tthis.compositeMaterial.uniforms[ 'bloomStrength' ].value = this.strength;\n\t\tthis.compositeMaterial.uniforms[ 'bloomRadius' ].value = this.radius;\n\t\tthis.compositeMaterial.uniforms[ 'bloomTintColors' ].value = this.bloomTintColors;\n\n\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ 0 ] );\n\t\trenderer.clear();\n\t\tthis.fsQuad.render( renderer );\n\n\t\t// Blend it additively over the input texture\n\n\t\tthis.fsQuad.material = this.blendMaterial;\n\t\tthis.copyUniforms[ 'tDiffuse' ].value = this.renderTargetsHorizontal[ 0 ].texture;\n\n\t\tif ( maskActive ) renderer.state.buffers.stencil.setTest( true );\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( readBuffer );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\t// Restore renderer settings\n\n\t\trenderer.setClearColor( this._oldClearColor, this.oldClearAlpha );\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n\tgetSeperableBlurMaterial( kernelRadius ) {\n\n\t\tconst coefficients = [];\n\n\t\tfor ( let i = 0; i < kernelRadius; i ++ ) {\n\n\t\t\tcoefficients.push( 0.39894 * Math.exp( - 0.5 * i * i / ( kernelRadius * kernelRadius ) ) / kernelRadius );\n\n\t\t}\n\n\t\treturn new ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t'KERNEL_RADIUS': kernelRadius\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t'colorTexture': { value: null },\n\t\t\t\t'invSize': { value: new Vector2( 0.5, 0.5 ) }, // inverse texture size\n\t\t\t\t'direction': { value: new Vector2( 0.5, 0.5 ) },\n\t\t\t\t'gaussianCoefficients': { value: coefficients } // precomputed Gaussian coefficients\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t`varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}`,\n\n\t\t\tfragmentShader:\n\t\t\t\t`#include <common>\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 invSize;\n\t\t\t\tuniform vec2 direction;\n\t\t\t\tuniform float gaussianCoefficients[KERNEL_RADIUS];\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tfloat weightSum = gaussianCoefficients[0];\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv ).rgb * weightSum;\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\n\t\t\t\t\t\tfloat x = float(i);\n\t\t\t\t\t\tfloat w = gaussianCoefficients[i];\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\n\t\t\t\t\t\tvec4 sample1 = texture2D( colorTexture, vUv + uvOffset );\n\t\t\t\t\t\tvec4 sample2 = texture2D( colorTexture, vUv - uvOffset );\n\t\t\t\t\t\tdiffuseSum += (sample1.rgb + sample2.rgb) * w;\n\t\t\t\t\t\tweightSum += 2.0 * w;\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum / weightSum, 1.0);\n\t\t\t\t}`\n\t\t} );\n\n\t}\n\n\tgetCompositeMaterial( nMips ) {\n\n\t\treturn new ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\t'NUM_MIPS': nMips\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\t'blurTexture1': { value: null },\n\t\t\t\t'blurTexture2': { value: null },\n\t\t\t\t'blurTexture3': { value: null },\n\t\t\t\t'blurTexture4': { value: null },\n\t\t\t\t'blurTexture5': { value: null },\n\t\t\t\t'bloomStrength': { value: 1.0 },\n\t\t\t\t'bloomFactors': { value: null },\n\t\t\t\t'bloomTintColors': { value: null },\n\t\t\t\t'bloomRadius': { value: 0.0 }\n\t\t\t},\n\n\t\t\tvertexShader:\n\t\t\t\t`varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}`,\n\n\t\t\tfragmentShader:\n\t\t\t\t`varying vec2 vUv;\n\t\t\t\tuniform sampler2D blurTexture1;\n\t\t\t\tuniform sampler2D blurTexture2;\n\t\t\t\tuniform sampler2D blurTexture3;\n\t\t\t\tuniform sampler2D blurTexture4;\n\t\t\t\tuniform sampler2D blurTexture5;\n\t\t\t\tuniform float bloomStrength;\n\t\t\t\tuniform float bloomRadius;\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\n\n\t\t\t\tfloat lerpBloomFactor(const in float factor) {\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\n\t\t\t\t}`\n\t\t} );\n\n\t}\n\n}\n\nUnrealBloomPass.BlurDirectionX = new Vector2( 1.0, 0.0 );\nUnrealBloomPass.BlurDirectionY = new Vector2( 0.0, 1.0 );\n\nexport { UnrealBloomPass };\n","import * as THREE from 'three';\r\nimport type { MixPassMaterialParams } from '../../../types/common';\r\nimport { ShaderLib } from '../../../threejs/shaders/shader-lib';\r\n\r\n/**\r\n * Custom shader material for mixing base and mix textures\r\n * Extends Three.js ShaderMaterial with mix-specific functionality\r\n */\r\nexport class MixPassMaterial extends THREE.ShaderMaterial {\r\n  isMixPassMaterial: boolean;\r\n  type: string;\r\n\r\n  constructor(parameters: MixPassMaterialParams = {}) {\r\n    super({\r\n      uniforms: THREE.UniformsUtils.clone(ShaderLib['mixPass'].uniforms),\r\n      vertexShader: ShaderLib['mixPass'].vertexShader,\r\n      fragmentShader: ShaderLib['mixPass'].fragmentShader,\r\n      defines: {},\r\n    });\r\n\r\n    this.isMixPassMaterial = true;\r\n    this.type = 'MixPassMaterial';\r\n    this.setValues(parameters);\r\n  }\r\n\r\n  get baseTexture(): THREE.Texture {\r\n    return this.uniforms.baseTexture.value;\r\n  }\r\n\r\n  set baseTexture(value: THREE.Texture) {\r\n    this.uniforms.baseTexture.value = value;\r\n  }\r\n\r\n  get bloomTexture(): THREE.Texture {\r\n    return this.uniforms.bloomTexture.value;\r\n  }\r\n\r\n  set bloomTexture(value: THREE.Texture) {\r\n    this.uniforms.bloomTexture.value = value;\r\n  }\r\n}\r\n","import * as THREE from 'three';\r\nimport { UniformsLib } from './uniforms-lib';\r\nimport { ShaderChunk } from './shader-chunk';\r\n\r\n/**\r\n * Shader library for the shaders\r\n */\r\nexport const ShaderLib: { [key: string]: THREE.ShaderLibShader } = {\r\n  mixPass: {\r\n    uniforms: UniformsLib.mixPass,\r\n    vertexShader: ShaderChunk.mixPass_vert,\r\n    fragmentShader: ShaderChunk.mixPass_frag,\r\n  },\r\n  extrudeWall: {\r\n    uniforms: UniformsLib.extrudeWall,\r\n    vertexShader: ShaderChunk.extrudeWall_vert,\r\n    fragmentShader: ShaderChunk.extrudeWall_frag,\r\n  },\r\n};\r\n","import * as THREE from 'three';\r\n\r\n/**\r\n * Uniforms library for the shaders\r\n */\r\nexport const UniformsLib = {\r\n  mixPass: {\r\n    baseTexture: { value: null },\r\n    bloomTexture: { value: null },\r\n  },\r\n  extrudeWall: {\r\n    colorA: { value: new THREE.Color(0x00bfff) },\r\n    colorB: { value: new THREE.Color(0x003366) },\r\n    wallOpacity: { value: 0.1 },\r\n    stripeCount: { value: 2 },\r\n    speed: { value: 0.5 },\r\n    time: { value: 0 }, // Time uniform for animation (start at 0)\r\n  },\r\n};\r\n","export const vertex = /* glsl */ `\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n  vUv = uv;\r\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n}\r\n`;\r\n\r\nexport const fragment = /* glsl */ `\r\nuniform sampler2D baseTexture;\r\nuniform sampler2D bloomTexture;\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n  // Combine base texture and bloom texture\r\n  vec4 base_color = texture2D(baseTexture, vUv);\r\n  vec4 bloom_color = texture2D(bloomTexture, vUv);\r\n  vec3 blendedColor = base_color.rgb + bloom_color.rgb;\r\n  gl_FragColor = vec4(blendedColor, 1.0);\r\n}\r\n`;\r\n","export const vertex = /* glsl */ `\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n  vUv = uv;\r\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n}\r\n`;\r\n\r\nexport const fragment = /* glsl */ `\r\nuniform vec3 colorA;\r\nuniform vec3 colorB;\r\nuniform float wallOpacity;\r\nuniform float stripeCount;\r\nuniform float time;\r\nuniform float speed;\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n  // Invert UV.y so stripes animate from bottom to top\r\n  float t = (1.0 - vUv.y) * stripeCount + time * speed;\r\n  float band = fract(t);\r\n  \r\n  // Feather both ends using smoothstep\r\n  float feather = 0.35;\r\n  float edge = smoothstep(0.0, feather, band) * (1.0 - smoothstep(1.0 - feather, 1.0, band));\r\n  vec3 color = mix(colorA, colorB, edge);\r\n  gl_FragColor = vec4(color, wallOpacity);\r\n}\r\n`;\r\n","import * as mixPass from './shader-chunk/mix-pass';\r\nimport * as extrudeWall from './shader-chunk/extrude-wall';\r\n\r\nexport const ShaderChunk = {\r\n  mixPass_vert: mixPass.vertex,\r\n  mixPass_frag: mixPass.fragment,\r\n  extrudeWall_vert: extrudeWall.vertex,\r\n  extrudeWall_frag: extrudeWall.fragment,\r\n};\r\n","import { MixPassMaterial } from './mix-pass-material';\r\nimport { ShaderPass } from 'three/addons/postprocessing/ShaderPass.js';\r\n\r\n/**\r\n * Custom ShaderPass for mixing base and bloom textures\r\n * Extends Three.js ShaderPass with mix-specific functionality\r\n */\r\nexport class MixPass extends ShaderPass {\r\n  isMixPass: boolean;\r\n  type: string;\r\n\r\n  constructor(material = new MixPassMaterial()) {\r\n    super(material);\r\n\r\n    this.isMixPass = true;\r\n    this.type = 'MixPass';\r\n\r\n    this.textureID = 'baseTexture';\r\n    this.needsSwap = true;\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport type { BloomLineGeometryParams, BloomLineMaterialParams } from '../types/common';\r\nimport { BloomLine, BloomLineGeometry, BloomLineMaterial } from '../threejs/objects/bloom-line';\r\nimport { EffectCanvasContext } from './effect-canvas';\r\n\r\nexport type MeshContextValue = { mesh: BloomLine | null };\r\nexport const MeshContext = React.createContext<MeshContextValue>({ mesh: null });\r\nexport type LineMeshProps = React.PropsWithChildren & {};\r\n\r\nconst _LineMesh: React.FC<LineMeshProps> = ({ children }) => {\r\n  const { group, bloom } = React.useContext(EffectCanvasContext) || {};\r\n  const [mesh] = React.useState(new BloomLine());\r\n\r\n  React.useEffect(() => {\r\n    if (mesh && group && bloom) {\r\n      try {\r\n        group.add(mesh);\r\n        bloom.enableBloom(mesh);\r\n      } catch (error) {\r\n        console.error('Error adding mesh to scene:', error);\r\n      }\r\n    }\r\n    return () => {\r\n      if (mesh && group && bloom) {\r\n        group.remove(mesh);\r\n        bloom.disableBloom(mesh);\r\n      }\r\n    };\r\n  }, [mesh, group, bloom]);\r\n\r\n  return <MeshContext.Provider value={{ mesh }}>{children}</MeshContext.Provider>;\r\n};\r\n\r\nconst _LineGeometry: React.FC<BloomLineGeometryParams> = (props) => {\r\n  const { mesh } = React.useContext(MeshContext) || {};\r\n  const [geometry] = React.useState(new BloomLineGeometry());\r\n\r\n  const memorizedProps = React.useMemo(() => props, [props.geometry?.join(',')]);\r\n\r\n  React.useEffect(() => {\r\n    if (mesh && geometry) {\r\n      if (mesh.geometry) {\r\n        mesh.geometry.dispose();\r\n      }\r\n\r\n      try {\r\n        if (!!memorizedProps.geometry?.length) {\r\n          geometry.setGeometry(memorizedProps.geometry);\r\n        }\r\n        mesh.geometry = geometry;\r\n        mesh.setPosition(geometry.normalizedPosition);\r\n      } catch (error) {\r\n        console.error('Error creating BloomLineGeometry:', error);\r\n      }\r\n    }\r\n    return () => {\r\n      if (mesh && geometry && mesh.geometry) {\r\n        mesh.geometry.dispose();\r\n      }\r\n    };\r\n  }, [geometry, memorizedProps, mesh]);\r\n\r\n  return null;\r\n};\r\n\r\nconst _LineMaterial: React.FC<BloomLineMaterialParams> = (props) => {\r\n  const { mesh } = React.useContext(MeshContext) || {};\r\n  const [material] = React.useState(new BloomLineMaterial(props));\r\n\r\n  const memorizedProps = React.useMemo(() => props, [Object.values(props).join(',')]);\r\n\r\n  React.useEffect(() => {\r\n    if (mesh && material) {\r\n      if (mesh.material) {\r\n        mesh.material.dispose();\r\n      }\r\n\r\n      try {\r\n        material.setValues(memorizedProps);\r\n        mesh.material = material;\r\n      } catch (error) {\r\n        console.error('Error creating BloomLineMaterial:', error);\r\n      }\r\n    }\r\n    return () => {\r\n      if (mesh && material && mesh.material) {\r\n        mesh.material.dispose();\r\n      }\r\n    };\r\n  }, [material, memorizedProps, mesh]);\r\n\r\n  return null;\r\n};\r\n\r\nexport {\r\n  _LineMesh as BloomLine,\r\n  _LineGeometry as BloomLineGeometry,\r\n  _LineMaterial as BloomLineMaterial,\r\n};\r\n","import * as THREE from 'three';\nimport type { Position } from 'geojson';\nimport { LineGeometry } from 'three/addons/lines/LineGeometry.js';\nimport utils from '../../../lib/bloom-effect/Utils.js';\n\n/**\n * Custom geometry class for bloom lines\n * Extends Three.js LineGeometry with preprocessing capabilities\n */\nexport class BloomLineGeometry extends LineGeometry {\n  isBloomLineGeometry: boolean;\n  type: string;\n  processedVertices: THREE.Vector3[] = [];\n  normalizedPosition: THREE.Vector3 = new THREE.Vector3();\n\n  constructor() {\n    super();\n    \n    this.isBloomLineGeometry = true;\n    this.type = 'BloomLineGeometry';\n  }\n\n  setGeometry(geometry: Position[]): void {\n    const straightProject = utils.lnglatsToWorld(geometry);\n    const normalized = utils.normalizeVertices(straightProject);\n    const flattenedArray = utils.flattenVectors(normalized.vertices);\n\n    this.processedVertices = normalized.vertices;\n    this.normalizedPosition = normalized.position;\n    this.setPositions(flattenedArray);\n  }\n}\n","import { LineMaterial } from 'three/addons/lines/LineMaterial.js';\nimport type { BloomLineMaterialParams } from '../../../types/common.js';\n\n/**\n * Custom material class for bloom lines\n * Extends Three.js LineMaterial with bloom-specific configurations\n */\nexport class BloomLineMaterial extends LineMaterial {\n  isBloomLineMaterial: boolean;\n  type: string;\n\n  constructor(parameters: BloomLineMaterialParams = {}) {\n    super({\n      color: parameters.color || 'white',\n      linewidth: parameters.linewidth ?? 1,\n      opacity: parameters.opacity ?? 1,\n      dashed: false,\n      transparent: true,\n      depthWrite: false,\n    });\n\n    this.isBloomLineMaterial = true;\n    this.type = 'BloomLineMaterial';\n    this.setValues(parameters);\n  }\n}\n","import * as THREE from 'three';\nimport { Line2 } from 'three/addons/lines/Line2.js';\nimport { BloomLineGeometry } from './bloom-line-geometry';\nimport { BloomLineMaterial } from './bloom-line-material';\n\n/**\n * Custom mesh class for bloom lines\n * Extends Three.js Line2 with bloom-specific functionality\n */\nexport class BloomLine extends Line2 {\n  isBloomLine: boolean;\n  type: string;\n\n  constructor(\n    geometry = new BloomLineGeometry(),\n    material = new BloomLineMaterial({ color: 'white' }),\n  ) {\n    super(geometry, material);\n    \n    this.isBloomLine = true;\n    this.type = 'BloomLine';\n  }\n\n  setPosition(position: THREE.Vector3): void {\n    this.position.copy(position);\n  }\n}\n","import * as React from 'react';\r\nimport { EffectCanvasContext } from './effect-canvas';\r\nimport {\r\n  ExtrudeWall,\r\n  ExtrudeWallGeometry,\r\n  ExtrudeWallMaterial,\r\n} from '../threejs/objects/extrude-wall';\r\nimport type { \r\n  ExtrudeWallGeometryParams, \r\n  ExtrudeWallMaterialParams \r\n} from '../types/common';\r\n\r\nexport type MeshContextValue = { mesh: ExtrudeWall | null };\r\nexport const MeshContext = React.createContext<MeshContextValue>({ mesh: null });\r\nexport type WallMeshProps = React.PropsWithChildren & {};\r\n\r\nconst _WallMesh: React.FC<WallMeshProps> = ({ children }) => {\r\n  const { group, bloom } = React.useContext(EffectCanvasContext) || {};\r\n  const [mesh] = React.useState(new ExtrudeWall());\r\n\r\n  React.useEffect(() => {\r\n    if (mesh && group && bloom) {\r\n      try {\r\n        group.add(mesh);\r\n        bloom.enableBloom(mesh);\r\n      } catch (error) {\r\n        console.error('Error adding mesh to scene:', error);\r\n      }\r\n    }\r\n    return () => {\r\n      if (mesh && group && bloom) {\r\n        group.remove(mesh);\r\n        bloom.disableBloom(mesh);\r\n      }\r\n    };\r\n  }, [mesh, group, bloom]);\r\n\r\n  return <MeshContext.Provider value={{ mesh }}>{children}</MeshContext.Provider>;\r\n};\r\n\r\nconst _WallGeometry: React.FC<ExtrudeWallGeometryParams> = (props) => {\r\n  const { mesh } = React.useContext(MeshContext) || {};\r\n  const [geometry] = React.useState(new ExtrudeWallGeometry());\r\n\r\n  const memorizedProps = React.useMemo(() => props, [props.geometry?.join(','), props.height]);\r\n\r\n  React.useEffect(() => {\r\n    if (mesh && geometry) {\r\n      if (mesh.geometry) {\r\n        mesh.geometry.dispose();\r\n      }\r\n\r\n      try {\r\n        if (!!memorizedProps.geometry?.length && !!memorizedProps.height) {\r\n          geometry.setGeometry(memorizedProps.geometry, memorizedProps.height);\r\n        }\r\n        mesh.geometry = geometry;\r\n        mesh.setPosition(geometry.offsetPosition);\r\n      } catch (error) {\r\n        console.error('Error creating ExtrudeWallGeometry:', error);\r\n      }\r\n    }\r\n    return () => {\r\n      if (mesh && geometry && mesh.geometry) {\r\n        mesh.geometry.dispose();\r\n      }\r\n    };\r\n  }, [geometry, memorizedProps, mesh]);\r\n\r\n  return null;\r\n};\r\n\r\nconst _WallMaterial: React.FC<ExtrudeWallMaterialParams> = (props) => {\r\n  const { mesh } = React.useContext(MeshContext) || {};\r\n  const [material] = React.useState(new ExtrudeWallMaterial(props));\r\n\r\n  const memorizedProps = React.useMemo(() => props, [Object.values(props).join(',')]);\r\n\r\n  React.useEffect(() => {\r\n    if (mesh && material) {\r\n      if (mesh.material && !Array.isArray(mesh.material)) {\r\n        mesh.material.dispose();\r\n      }\r\n\r\n      try {\r\n        material.setValues(memorizedProps);\r\n        mesh.material = material;\r\n      } catch (error) {\r\n        console.error('Error creating ExtrudeWallMaterial:', error);\r\n      }\r\n    }\r\n    return () => {\r\n      if (mesh && material && mesh.material && !Array.isArray(mesh.material)) {\r\n        mesh.material.dispose();\r\n      }\r\n    };\r\n  }, [material, memorizedProps, mesh]);\r\n\r\n  return null;\r\n};\r\n\r\nexport {\r\n  _WallMesh as ExtrudeWall,\r\n  _WallGeometry as ExtrudeWallGeometry,\r\n  _WallMaterial as ExtrudeWallMaterial,\r\n};\r\n","import * as THREE from 'three';\nimport type { Position } from 'geojson';\nimport utils from '../../../lib/bloom-effect/Utils.js';\n\n/**\n * Custom geometry class for extruded walls\n * Extends Three.js BufferGeometry with wall-specific capabilities\n */\nexport class ExtrudeWallGeometry extends THREE.BufferGeometry {\n  isExtrudeWallGeometry: boolean;\n  type: string;\n  offsetPosition: THREE.Vector3 = new THREE.Vector3();\n\n  constructor() {\n    super();\n    \n    this.isExtrudeWallGeometry = true;\n    this.type = 'ExtrudeWallGeometry';\n  }\n\n  setGeometry(geometry: Position[], heightMeters: number): void {\n    // Project coordinates to world space\n    const straightProject = utils.lnglatsToWorld(geometry);\n    const unitHeight = utils.projectedUnitsPerMeter(geometry[0][1]);\n    const n = straightProject.length;\n    const wallHeight = heightMeters * unitHeight;\n    const vertices: number[] = [];\n    const uvs: number[] = [];\n    const indices: number[] = [];\n\n    // Offset to reduce coordinate magnitude (reduce precision errors)\n    const [offsetX, offsetY] = straightProject[0];\n    this.offsetPosition.set(offsetX, offsetY, 0);\n\n    // Create vertices for bottom and top (with offset)\n    for (let i = 0; i < n; i++) {\n      const [x, y] = straightProject[i];\n      vertices.push(x - offsetX, y - offsetY, 0);\n      uvs.push(i / (n - 1), 0);\n      vertices.push(x - offsetX, y - offsetY, wallHeight);\n      uvs.push(i / (n - 1), 1);\n    }\n\n    // Create indices for side faces\n    for (let i = 0; i < n - 1; i++) {\n      const base = i * 2;\n      indices.push(base, base + 1, base + 2, base + 1, base + 3, base + 2);\n    }\n\n    // Set attributes\n    this.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\n    this.setAttribute('uv', new THREE.Float32BufferAttribute(uvs, 2));\n    this.setIndex(indices);\n    this.computeVertexNormals();\n    \n    // Force Three.js to recognize geometry changes\n    this.computeBoundingBox();\n    this.computeBoundingSphere();\n  }\n}\n","import * as THREE from 'three';\nimport type { ExtrudeWallMaterialParams } from '../../../types/common.js';\nimport { ShaderLib } from '../../shaders/shader-lib.js';\n\n/**\n * Custom material class for extruded walls\n * Extends Three.js ShaderMaterial with animated stripe effects\n */\nexport class ExtrudeWallMaterial extends THREE.ShaderMaterial {\n  isExtrudeWallMaterial: boolean;\n  type: string;\n\n  constructor(parameters: ExtrudeWallMaterialParams = {}) {\n    super({\n      uniforms: THREE.UniformsUtils.clone(ShaderLib['extrudeWall'].uniforms),\n      vertexShader: ShaderLib['extrudeWall'].vertexShader,\n      fragmentShader: ShaderLib['extrudeWall'].fragmentShader,\n      transparent: true,\n      side: THREE.DoubleSide,\n      depthWrite: false,\n    });\n\n    this.isExtrudeWallMaterial = true;\n    this.type = 'ExtrudeWallMaterial';\n    this.setValues(parameters);\n  }\n\n  get colorA(): THREE.Color {\n    return this.uniforms.colorA.value;\n  }\n\n  set colorA(value: THREE.Color) {\n    this.uniforms.colorA.value = value;\n  }\n\n  get colorB(): THREE.Color {\n    return this.uniforms.colorB.value;\n  }\n\n  set colorB(value: THREE.Color) {\n    this.uniforms.colorB.value = value;\n  }\n\n  get stripeCount(): number {\n    return this.uniforms.stripeCount.value;\n  }\n\n  set stripeCount(value: number) {\n    this.uniforms.stripeCount.value = value;\n  }\n\n  get wallOpacity(): number {\n    return this.uniforms.wallOpacity.value;\n  }\n\n  set wallOpacity(value: number) {\n    this.uniforms.wallOpacity.value = value;\n  }\n\n  get speed(): number {\n    return this.uniforms.speed.value;\n  }\n\n  set speed(value: number) {\n    this.uniforms.speed.value = value;\n  }\n\n  get time(): number {\n    return this.uniforms.time.value;\n  }\n\n  set time(value: number) {\n    this.uniforms.time.value = value;\n  }\n}\n","import * as THREE from 'three';\nimport { ExtrudeWallGeometry } from './extrude-wall-geometry';\nimport { ExtrudeWallMaterial } from './extrude-wall-material';\n\n/**\n * Custom mesh class for extruded walls\n * Extends Three.js Mesh with wall-specific functionality\n */\nexport class ExtrudeWall extends THREE.Mesh {\n  isExtrudeWall: boolean;\n  type: string;\n\n  constructor(\n    geometry = new ExtrudeWallGeometry(),\n    material = new ExtrudeWallMaterial({ colorA: 0x00bfff, colorB: 0x003366 }),\n  ) {\n    super(geometry, material);\n    \n    this.isExtrudeWall = true;\n    this.type = 'ExtrudeWall';\n    this.userData.isStripeWall = true;\n  }\n\n  setPosition(position: THREE.Vector3): void {\n    this.position.copy(position);\n  }\n}\n","import * as THREE from 'three';\r\nimport type { Position } from 'geojson';\r\nimport type { LineMaterialParameters } from 'three/examples/jsm/Addons.js';\r\nimport type { BloomRenderer } from '../threejs/graphics/bloom-renderer';\r\nimport type { CanvasContainer } from '../threejs/graphics/canvas-container';\r\n\r\n/**\r\n * Context value for the Canvas context\r\n */\r\nexport type EffectCanvasContext = {\r\n  /** Three.js scene */\r\n  scene: THREE.Scene;\r\n  /** Three.js camera */\r\n  camera: THREE.PerspectiveCamera;\r\n  /** Three.js renderer */\r\n  renderer: THREE.WebGLRenderer;\r\n  /** Object group container */\r\n  group: THREE.Group;\r\n  /** Ambient light */\r\n  light: THREE.AmbientLight;\r\n};\r\n\r\nexport type EffectManagerContext = EffectCanvasContext & {\r\n  /** Bloom renderer instance */\r\n  bloom: BloomRenderer;\r\n  /** Canvas container instance */\r\n  container: CanvasContainer;\r\n};\r\n\r\n/**\r\n * Bloom effect parameters configuration\r\n */\r\nexport type EffectCanvasParams = {\r\n  /** Threshold for bloom effect (0-1) */\r\n  threshold?: number;\r\n  /** Strength of bloom effect (0-3) */\r\n  strength?: number;\r\n  /** Radius of bloom effect (0-1) */\r\n  radius?: number;\r\n};\r\n\r\n/**\r\n * Parameters for initializing MixPass material\r\n */\r\nexport type MixPassMaterialParams = THREE.ShaderMaterialParameters & {\r\n  /** Bloom texture for blending */\r\n  bloomTexture?: THREE.Texture | null;\r\n};\r\n\r\n/**\r\n * Parameters for initializing bloom line geometry\r\n */\r\nexport type BloomLineGeometryParams = {\r\n  /** Geometry data for the bloom effect */\r\n  geometry?: Position[];\r\n};\r\n\r\n/**\r\n * Line configuration for bloom effect\r\n */\r\nexport type BloomLineMaterialParams = LineMaterialParameters & {\r\n  /** Line color (hex value) */\r\n  color?: THREE.Color | string | number;\r\n  /** Line width in pixels */\r\n  linewidth?: number;\r\n  /** Line opacity (0-1) */\r\n  opacity?: number;\r\n};\r\n\r\n/**\r\n * Parameters for initializing extruded wall geometry\r\n */\r\nexport type ExtrudeWallGeometryParams = {\r\n  /** Geometry data for the extruded wall */\r\n  geometry?: Position[];\r\n  /** Wall height in meters */\r\n  height?: number;\r\n};\r\n\r\n/**\r\n * Wall configuration for bloom effect\r\n */\r\nexport type ExtrudeWallMaterialParams = THREE.ShaderMaterialParameters & {\r\n  /** Primary color for gradient */\r\n  colorA?: THREE.Color | string | number;\r\n  /** Secondary color for gradient */\r\n  colorB?: THREE.Color | string | number;\r\n  /** Wall opacity (0-1) */\r\n  wallOpacity?: number;\r\n  /** Number of animated stripes */\r\n  stripeCount?: number;\r\n  /** Animation speed multiplier */\r\n  speed?: number;\r\n};\r\n"],"mappings":"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","names":["React","useMap","defaultOptions","useMap","React","React","useMap","React","jsx","defaultOptions","useMap","Threebox","jsx","layerCounter","React","React","defaultProps","React","jsx","React","useMap","THREE","THREE","vertex","renderer","THREE","Vector3","renderer","THREE","THREE","vertex","fragment","vertex","fragment","renderer","jsx","useMap","React","THREE","jsx","React","THREE","THREE","THREE","jsx","MeshContext"]}